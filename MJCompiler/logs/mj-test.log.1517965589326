INFO  02:06:08,450 - #39 program
INFO  02:06:08,450 - #43 kod_gen
INFO  02:06:08,450 - #43 int
INFO  02:06:08,450 - #43 array
INFO  02:06:08,450 - #14 [
INFO  02:06:08,450 - #15 ]
INFO  02:06:08,465 - #25 ;
INFO  02:06:08,465 - #38 class
INFO  02:06:08,465 - #43 Search
INFO  02:06:08,465 - #26 {
INFO  02:06:08,465 - #26 {
INFO  02:06:08,465 - #43 int
INFO  02:06:08,481 - #43 search
INFO  02:06:08,481 - #16 (
INFO  02:06:08,481 - #43 int
INFO  02:06:08,481 - #43 arr
INFO  02:06:08,481 - #14 [
INFO  02:06:08,481 - #15 ]
INFO  02:06:08,481 - #21 ,
INFO  02:06:08,481 - #43 int
INFO  02:06:08,481 - #43 l
INFO  02:06:08,481 - #21 ,
INFO  02:06:08,481 - #43 int
INFO  02:06:08,481 - #43 r
INFO  02:06:08,481 - #21 ,
INFO  02:06:08,481 - #43 int
INFO  02:06:08,481 - #43 x
INFO  02:06:08,481 - #17 )
INFO  02:06:08,481 - #26 {
INFO  02:06:08,481 - #28 if
INFO  02:06:08,496 - #16 (
INFO  02:06:08,496 - #43 l
INFO  02:06:08,496 - #9 >
INFO  02:06:08,496 - #43 r
INFO  02:06:08,496 - #17 )
INFO  02:06:08,496 - #34 return
INFO  02:06:08,512 - #6 -
INFO  02:06:08,512 - #42 1
INFO  02:06:08,512 - #25 ;
INFO  02:06:08,512 - #29 do
INFO  02:06:08,512 - #26 {
INFO  02:06:08,512 - #28 if
INFO  02:06:08,512 - #16 (
INFO  02:06:08,512 - #43 arr
INFO  02:06:08,528 - #14 [
INFO  02:06:08,528 - #43 l
INFO  02:06:08,528 - #15 ]
INFO  02:06:08,528 - #7 ==
INFO  02:06:08,528 - #43 x
INFO  02:06:08,528 - #17 )
INFO  02:06:08,528 - #26 {
INFO  02:06:08,528 - #34 return
INFO  02:06:08,528 - #43 l
INFO  02:06:08,528 - #25 ;
INFO  02:06:08,528 - #27 }
INFO  02:06:08,528 - #32 else
INFO  02:06:08,528 - #43 l
INFO  02:06:08,528 - #23 ++
INFO  02:06:08,528 - #27 }
INFO  02:06:08,528 - #30 while
INFO  02:06:08,543 - #16 (
INFO  02:06:08,543 - #43 l
INFO  02:06:08,543 - #12 <=
INFO  02:06:08,543 - #43 r
INFO  02:06:08,543 - #17 )
INFO  02:06:08,543 - #25 ;
INFO  02:06:08,543 - #34 return
INFO  02:06:08,543 - #6 -
INFO  02:06:08,543 - #42 1
INFO  02:06:08,543 - #25 ;
INFO  02:06:08,543 - #27 }
INFO  02:06:08,543 - #27 }
INFO  02:06:08,543 - #27 }
INFO  02:06:08,543 - #38 class
INFO  02:06:08,543 - #43 RecursiveBinarySearch
INFO  02:06:08,543 - #41 extends
INFO  02:06:08,543 - #43 Search
INFO  02:06:08,543 - #26 {
INFO  02:06:08,543 - #26 {
INFO  02:06:08,543 - #43 int
INFO  02:06:08,543 - #43 search
INFO  02:06:08,543 - #16 (
INFO  02:06:08,543 - #43 int
INFO  02:06:08,543 - #43 arr
INFO  02:06:08,543 - #14 [
INFO  02:06:08,543 - #15 ]
INFO  02:06:08,543 - #21 ,
INFO  02:06:08,543 - #43 int
INFO  02:06:08,543 - #43 l
INFO  02:06:08,543 - #21 ,
INFO  02:06:08,543 - #43 int
INFO  02:06:08,543 - #43 r
INFO  02:06:08,543 - #21 ,
INFO  02:06:08,543 - #43 int
INFO  02:06:08,543 - #43 x
INFO  02:06:08,543 - #17 )
INFO  02:06:08,543 - #26 {
INFO  02:06:08,543 - #28 if
INFO  02:06:08,543 - #16 (
INFO  02:06:08,543 - #43 r
INFO  02:06:08,543 - #10 >=
INFO  02:06:08,543 - #43 l
INFO  02:06:08,543 - #17 )
INFO  02:06:08,543 - #26 {
INFO  02:06:08,543 - #43 int
INFO  02:06:08,559 - #43 mid
INFO  02:06:08,559 - #22 =
INFO  02:06:08,559 - #43 l
INFO  02:06:08,559 - #5 +
INFO  02:06:08,559 - #16 (
INFO  02:06:08,559 - #43 r
INFO  02:06:08,559 - #6 -
INFO  02:06:08,559 - #43 l
INFO  02:06:08,559 - #17 )
INFO  02:06:08,559 - #3 /
INFO  02:06:08,559 - #42 2
INFO  02:06:08,559 - #25 ;
INFO  02:06:08,559 - #28 if
INFO  02:06:08,559 - #16 (
INFO  02:06:08,559 - #43 arr
INFO  02:06:08,559 - #14 [
INFO  02:06:08,559 - #43 mid
INFO  02:06:08,559 - #15 ]
INFO  02:06:08,559 - #7 ==
INFO  02:06:08,559 - #43 x
INFO  02:06:08,559 - #17 )
INFO  02:06:08,559 - #34 return
INFO  02:06:08,559 - #43 mid
INFO  02:06:08,559 - #25 ;
INFO  02:06:08,559 - #28 if
INFO  02:06:08,559 - #16 (
INFO  02:06:08,559 - #43 arr
INFO  02:06:08,559 - #14 [
INFO  02:06:08,559 - #43 mid
INFO  02:06:08,559 - #15 ]
INFO  02:06:08,559 - #9 >
INFO  02:06:08,559 - #43 x
INFO  02:06:08,559 - #17 )
INFO  02:06:08,559 - #34 return
INFO  02:06:08,559 - #43 binarySearch
INFO  02:06:08,559 - #16 (
INFO  02:06:08,559 - #43 arr
INFO  02:06:08,559 - #21 ,
INFO  02:06:08,559 - #43 l
INFO  02:06:08,559 - #21 ,
INFO  02:06:08,559 - #43 mid
INFO  02:06:08,559 - #6 -
INFO  02:06:08,559 - #42 1
INFO  02:06:08,559 - #21 ,
INFO  02:06:08,559 - #43 x
INFO  02:06:08,559 - #17 )
INFO  02:06:08,559 - #25 ;
INFO  02:06:08,559 - #34 return
INFO  02:06:08,559 - #43 binarySearch
INFO  02:06:08,559 - #16 (
INFO  02:06:08,559 - #43 arr
INFO  02:06:08,559 - #21 ,
INFO  02:06:08,559 - #43 mid
INFO  02:06:08,559 - #5 +
INFO  02:06:08,559 - #42 1
INFO  02:06:08,559 - #21 ,
INFO  02:06:08,559 - #43 r
INFO  02:06:08,559 - #21 ,
INFO  02:06:08,559 - #43 x
INFO  02:06:08,559 - #17 )
INFO  02:06:08,559 - #25 ;
INFO  02:06:08,575 - #27 }
INFO  02:06:08,575 - #34 return
INFO  02:06:08,575 - #6 -
INFO  02:06:08,575 - #42 1
INFO  02:06:08,575 - #25 ;
INFO  02:06:08,575 - #27 }
INFO  02:06:08,575 - #27 }
INFO  02:06:08,575 - #27 }
INFO  02:06:08,575 - #38 class
INFO  02:06:08,575 - #43 BinarySearch
INFO  02:06:08,575 - #41 extends
INFO  02:06:08,575 - #43 Search
INFO  02:06:08,575 - #26 {
INFO  02:06:08,575 - #26 {
INFO  02:06:08,575 - #43 int
INFO  02:06:08,575 - #43 search
INFO  02:06:08,575 - #16 (
INFO  02:06:08,575 - #43 int
INFO  02:06:08,575 - #43 arr
INFO  02:06:08,575 - #14 [
INFO  02:06:08,575 - #15 ]
INFO  02:06:08,575 - #21 ,
INFO  02:06:08,575 - #43 int
INFO  02:06:08,575 - #43 l
INFO  02:06:08,575 - #21 ,
INFO  02:06:08,575 - #43 int
INFO  02:06:08,575 - #43 r
INFO  02:06:08,575 - #21 ,
INFO  02:06:08,575 - #43 int
INFO  02:06:08,575 - #43 x
INFO  02:06:08,575 - #17 )
INFO  02:06:08,575 - #26 {
INFO  02:06:08,575 - #43 l
INFO  02:06:08,575 - #22 =
INFO  02:06:08,575 - #42 0
INFO  02:06:08,575 - #25 ;
INFO  02:06:08,575 - #43 r
INFO  02:06:08,575 - #22 =
INFO  02:06:08,575 - #43 len
INFO  02:06:08,575 - #16 (
INFO  02:06:08,575 - #43 arr
INFO  02:06:08,575 - #17 )
INFO  02:06:08,575 - #6 -
INFO  02:06:08,575 - #42 1
INFO  02:06:08,575 - #25 ;
INFO  02:06:08,575 - #29 do
INFO  02:06:08,575 - #26 {
INFO  02:06:08,575 - #43 int
INFO  02:06:08,575 - #43 m
INFO  02:06:08,575 - #22 =
INFO  02:06:08,575 - #43 l
INFO  02:06:08,575 - #5 +
INFO  02:06:08,575 - #16 (
INFO  02:06:08,575 - #43 r
INFO  02:06:08,575 - #6 -
INFO  02:06:08,575 - #43 l
INFO  02:06:08,575 - #17 )
INFO  02:06:08,575 - #3 /
INFO  02:06:08,575 - #42 2
INFO  02:06:08,575 - #25 ;
INFO  02:06:08,575 - #28 if
INFO  02:06:08,575 - #16 (
INFO  02:06:08,575 - #43 arr
INFO  02:06:08,575 - #14 [
INFO  02:06:08,575 - #43 m
INFO  02:06:08,575 - #15 ]
INFO  02:06:08,575 - #7 ==
INFO  02:06:08,575 - #43 x
INFO  02:06:08,575 - #17 )
INFO  02:06:08,575 - #34 return
INFO  02:06:08,575 - #43 m
INFO  02:06:08,575 - #25 ;
INFO  02:06:08,575 - #28 if
INFO  02:06:08,575 - #16 (
INFO  02:06:08,575 - #43 arr
INFO  02:06:08,575 - #14 [
INFO  02:06:08,575 - #43 m
INFO  02:06:08,575 - #15 ]
INFO  02:06:08,575 - #11 <
INFO  02:06:08,575 - #43 x
INFO  02:06:08,591 - #17 )
INFO  02:06:08,591 - #43 l
INFO  02:06:08,591 - #22 =
INFO  02:06:08,591 - #43 m
INFO  02:06:08,591 - #5 +
INFO  02:06:08,592 - #42 1
INFO  02:06:08,592 - #25 ;
INFO  02:06:08,592 - #32 else
INFO  02:06:08,592 - #43 r
INFO  02:06:08,592 - #22 =
INFO  02:06:08,593 - #43 m
INFO  02:06:08,593 - #6 -
INFO  02:06:08,593 - #42 1
INFO  02:06:08,593 - #25 ;
INFO  02:06:08,593 - #27 }
INFO  02:06:08,593 - #30 while
INFO  02:06:08,593 - #16 (
INFO  02:06:08,593 - #43 l
INFO  02:06:08,593 - #12 <=
INFO  02:06:08,593 - #43 r
INFO  02:06:08,593 - #17 )
INFO  02:06:08,593 - #25 ;
INFO  02:06:08,593 - #34 return
INFO  02:06:08,593 - #6 -
INFO  02:06:08,593 - #42 1
INFO  02:06:08,593 - #25 ;
INFO  02:06:08,593 - #27 }
INFO  02:06:08,593 - #27 }
INFO  02:06:08,593 - #27 }
INFO  02:06:08,593 - #38 class
INFO  02:06:08,593 - #43 Helper
INFO  02:06:08,593 - #26 {
INFO  02:06:08,593 - #26 {
INFO  02:06:08,593 - #37 void
INFO  02:06:08,593 - #43 generateArray
INFO  02:06:08,593 - #16 (
INFO  02:06:08,593 - #43 int
INFO  02:06:08,593 - #43 size
INFO  02:06:08,593 - #17 )
INFO  02:06:08,593 - #43 int
INFO  02:06:08,593 - #43 i
INFO  02:06:08,593 - #25 ;
INFO  02:06:08,593 - #26 {
INFO  02:06:08,593 - #43 i
INFO  02:06:08,593 - #22 =
ERROR 02:06:08,593 - Sintaksna greska prilikom definisanja lokalnih promenljivih  na liniji 14
INFO  02:06:08,593 - #42 0
INFO  02:06:08,593 - #25 ;
INFO  02:06:08,593 - #29 do
INFO  02:06:08,593 - #26 {
INFO  02:06:08,593 - #36 read
INFO  02:06:08,593 - #16 (
INFO  02:06:08,593 - #43 array
INFO  02:06:08,593 - #14 [
INFO  02:06:08,593 - #43 i
INFO  02:06:08,593 - #15 ]
INFO  02:06:08,593 - #17 )
INFO  02:06:08,593 - #25 ;
INFO  02:06:08,593 - #43 i
INFO  02:06:08,593 - #23 ++
INFO  02:06:08,593 - #25 ;
INFO  02:06:08,593 - #27 }
INFO  02:06:08,608 - #30 while
INFO  02:06:08,608 - #16 (
INFO  02:06:08,608 - #43 i
INFO  02:06:08,608 - #11 <
INFO  02:06:08,608 - #43 size
INFO  02:06:08,608 - #17 )
INFO  02:06:08,608 - #25 ;
INFO  02:06:08,608 - #27 }
INFO  02:06:08,608 - #37 void
INFO  02:06:08,608 - #43 sortArray
INFO  02:06:08,608 - #16 (
INFO  02:06:08,608 - #17 )
INFO  02:06:08,608 - #43 int
INFO  02:06:08,608 - #43 n
INFO  02:06:08,608 - #25 ;
INFO  02:06:08,608 - #43 int
INFO  02:06:08,608 - #43 i
INFO  02:06:08,608 - #25 ;
INFO  02:06:08,608 - #43 int
INFO  02:06:08,608 - #43 key
INFO  02:06:08,608 - #25 ;
INFO  02:06:08,608 - #43 int
INFO  02:06:08,624 - #43 j
INFO  02:06:08,624 - #25 ;
INFO  02:06:08,624 - #26 {
INFO  02:06:08,624 - #43 n
INFO  02:06:08,624 - #22 =
INFO  02:06:08,624 - #43 len
INFO  02:06:08,624 - #16 (
INFO  02:06:08,624 - #43 array
INFO  02:06:08,624 - #17 )
INFO  02:06:08,624 - #25 ;
INFO  02:06:08,624 - #43 i
INFO  02:06:08,624 - #22 =
INFO  02:06:08,624 - #42 1
INFO  02:06:08,624 - #25 ;
INFO  02:06:08,624 - #29 do
INFO  02:06:08,624 - #26 {
INFO  02:06:08,624 - #43 key
INFO  02:06:08,624 - #22 =
INFO  02:06:08,624 - #43 array
INFO  02:06:08,624 - #14 [
INFO  02:06:08,624 - #43 i
INFO  02:06:08,624 - #15 ]
INFO  02:06:08,624 - #25 ;
INFO  02:06:08,624 - #43 j
INFO  02:06:08,624 - #22 =
INFO  02:06:08,624 - #43 i
INFO  02:06:08,624 - #6 -
INFO  02:06:08,624 - #42 1
INFO  02:06:08,624 - #25 ;
INFO  02:06:08,624 - #28 if
INFO  02:06:08,624 - #16 (
INFO  02:06:08,624 - #43 j
INFO  02:06:08,624 - #10 >=
INFO  02:06:08,624 - #42 0
INFO  02:06:08,624 - #19 &&
INFO  02:06:08,624 - #43 array
INFO  02:06:08,624 - #14 [
INFO  02:06:08,624 - #43 j
INFO  02:06:08,639 - #15 ]
INFO  02:06:08,639 - #9 >
INFO  02:06:08,639 - #43 key
INFO  02:06:08,639 - #17 )
INFO  02:06:08,639 - #29 do
INFO  02:06:08,639 - #26 {
INFO  02:06:08,639 - #43 arr
INFO  02:06:08,639 - #14 [
INFO  02:06:08,639 - #43 j
INFO  02:06:08,639 - #5 +
INFO  02:06:08,639 - #42 1
INFO  02:06:08,639 - #15 ]
INFO  02:06:08,639 - #22 =
INFO  02:06:08,639 - #43 arr
INFO  02:06:08,639 - #14 [
INFO  02:06:08,639 - #43 j
INFO  02:06:08,639 - #15 ]
INFO  02:06:08,639 - #25 ;
INFO  02:06:08,639 - #43 j
INFO  02:06:08,639 - #22 =
INFO  02:06:08,639 - #43 j
INFO  02:06:08,639 - #6 -
INFO  02:06:08,639 - #42 1
INFO  02:06:08,639 - #25 ;
INFO  02:06:08,639 - #27 }
INFO  02:06:08,639 - #30 while
INFO  02:06:08,639 - #16 (
INFO  02:06:08,639 - #43 j
INFO  02:06:08,639 - #10 >=
INFO  02:06:08,655 - #42 0
INFO  02:06:08,655 - #19 &&
INFO  02:06:08,655 - #43 arr
INFO  02:06:08,655 - #14 [
INFO  02:06:08,655 - #43 j
INFO  02:06:08,655 - #15 ]
INFO  02:06:08,655 - #9 >
INFO  02:06:08,655 - #43 key
INFO  02:06:08,655 - #17 )
INFO  02:06:08,655 - #25 ;
INFO  02:06:08,655 - #43 i
INFO  02:06:08,655 - #23 ++
INFO  02:06:08,655 - #25 ;
INFO  02:06:08,655 - #43 array
INFO  02:06:08,655 - #14 [
INFO  02:06:08,655 - #43 j
INFO  02:06:08,655 - #5 +
INFO  02:06:08,655 - #42 1
INFO  02:06:08,655 - #15 ]
INFO  02:06:08,655 - #22 =
INFO  02:06:08,655 - #43 key
INFO  02:06:08,655 - #25 ;
INFO  02:06:08,655 - #27 }
INFO  02:06:08,655 - #30 while
INFO  02:06:08,655 - #16 (
INFO  02:06:08,655 - #43 i
INFO  02:06:08,655 - #11 <
INFO  02:06:08,671 - #43 n
INFO  02:06:08,671 - #17 )
INFO  02:06:08,671 - #25 ;
INFO  02:06:08,671 - #27 }
INFO  02:06:08,671 - #27 }
INFO  02:06:08,671 - #27 }
INFO  02:06:08,671 - #26 {
INFO  02:06:08,677 - #37 void
INFO  02:06:08,677 - #43 printSearchResult
INFO  02:06:08,677 - #16 (
INFO  02:06:08,678 - #43 int
INFO  02:06:08,678 - #43 res
INFO  02:06:08,678 - #17 )
INFO  02:06:08,678 - #26 {
INFO  02:06:08,678 - #28 if
INFO  02:06:08,678 - #16 (
INFO  02:06:08,678 - #43 res
INFO  02:06:08,679 - #8 !=
INFO  02:06:08,679 - #6 -
INFO  02:06:08,680 - #42 1
INFO  02:06:08,680 - #17 )
INFO  02:06:08,680 - #35 print
INFO  02:06:08,681 - #16 (
INFO  02:06:08,681 - #43 res
INFO  02:06:08,681 - #17 )
INFO  02:06:08,683 - #32 else
INFO  02:06:08,683 - #26 {
INFO  02:06:08,683 - #35 print
INFO  02:06:08,684 - #16 (
INFO  02:06:08,684 - #45 n
INFO  02:06:08,684 - #17 )
INFO  02:06:08,684 - #25 ;
INFO  02:06:08,685 - #35 print
INFO  02:06:08,685 - #16 (
INFO  02:06:08,685 - #45 o
INFO  02:06:08,685 - #17 )
INFO  02:06:08,685 - #25 ;
INFO  02:06:08,685 - #35 print
INFO  02:06:08,685 - #16 (
INFO  02:06:08,686 - #45 t
INFO  02:06:08,686 - #17 )
INFO  02:06:08,686 - #25 ;
INFO  02:06:08,686 - #35 print
INFO  02:06:08,686 - #16 (
INFO  02:06:08,686 - #45 f
INFO  02:06:08,686 - #17 )
INFO  02:06:08,686 - #25 ;
INFO  02:06:08,686 - #35 print
INFO  02:06:08,687 - #16 (
INFO  02:06:08,687 - #45 o
INFO  02:06:08,687 - #17 )
INFO  02:06:08,687 - #25 ;
INFO  02:06:08,687 - #35 print
INFO  02:06:08,687 - #16 (
INFO  02:06:08,687 - #45 u
INFO  02:06:08,687 - #17 )
INFO  02:06:08,688 - #25 ;
INFO  02:06:08,688 - #35 print
INFO  02:06:08,688 - #16 (
INFO  02:06:08,688 - #45 n
INFO  02:06:08,688 - #17 )
INFO  02:06:08,688 - #25 ;
INFO  02:06:08,688 - #35 print
INFO  02:06:08,689 - #16 (
INFO  02:06:08,689 - #45 d
INFO  02:06:08,689 - #17 )
INFO  02:06:08,689 - #25 ;
INFO  02:06:08,690 - #27 }
INFO  02:06:08,690 - #27 }
INFO  02:06:08,690 - #37 void
INFO  02:06:08,690 - #43 main
INFO  02:06:08,690 - #16 (
INFO  02:06:08,690 - #17 )
INFO  02:06:08,690 - #43 Helper
INFO  02:06:08,690 - #43 h
INFO  02:06:08,691 - #25 ;
INFO  02:06:08,691 - #43 int
INFO  02:06:08,691 - #43 size
INFO  02:06:08,691 - #25 ;
ERROR 02:06:08,691 - Sintaksna greska prilikom definisanja lokalnih promenljivih  na liniji 124
INFO  02:06:08,691 - #43 bool
INFO  02:06:08,692 - #43 loop
INFO  02:06:08,692 - #25 ;
INFO  02:06:08,692 - #43 Search
INFO  02:06:08,692 - #43 s
INFO  02:06:08,692 - #25 ;
INFO  02:06:08,692 - #43 int
INFO  02:06:08,693 - #43 res
INFO  02:06:08,693 - #25 ;
INFO  02:06:08,693 - #43 int
INFO  02:06:08,693 - #43 elem
INFO  02:06:08,693 - #25 ;
INFO  02:06:08,694 - #26 {
INFO  02:06:08,694 - #43 loop
INFO  02:06:08,694 - #22 =
INFO  02:06:08,694 - #44 true
INFO  02:06:08,695 - #25 ;
INFO  02:06:08,695 - #29 do
INFO  02:06:08,695 - #26 {
INFO  02:06:08,695 - #36 read
INFO  02:06:08,695 - #16 (
INFO  02:06:08,696 - #43 size
INFO  02:06:08,696 - #17 )
INFO  02:06:08,696 - #25 ;
INFO  02:06:08,696 - #28 if
INFO  02:06:08,696 - #16 (
INFO  02:06:08,696 - #43 size
INFO  02:06:08,696 - #12 <=
INFO  02:06:08,702 - #42 0
INFO  02:06:08,702 - #17 )
INFO  02:06:08,702 - #26 {
INFO  02:06:08,702 - #35 print
INFO  02:06:08,702 - #16 (
INFO  02:06:08,702 - #45 s
INFO  02:06:08,702 - #17 )
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #35 print
INFO  02:06:08,702 - #16 (
INFO  02:06:08,702 - #45 i
INFO  02:06:08,702 - #17 )
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #35 print
INFO  02:06:08,702 - #16 (
INFO  02:06:08,702 - #45 z
INFO  02:06:08,702 - #17 )
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #35 print
INFO  02:06:08,702 - #16 (
INFO  02:06:08,702 - #45 e
INFO  02:06:08,702 - #17 )
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #35 print
INFO  02:06:08,702 - #16 (
INFO  02:06:08,702 - #45 e
INFO  02:06:08,702 - #17 )
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #35 print
INFO  02:06:08,702 - #16 (
INFO  02:06:08,702 - #45 r
INFO  02:06:08,702 - #17 )
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #35 print
INFO  02:06:08,702 - #16 (
INFO  02:06:08,702 - #45 r
INFO  02:06:08,702 - #17 )
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #35 print
INFO  02:06:08,702 - #16 (
INFO  02:06:08,702 - #45 o
INFO  02:06:08,702 - #17 )
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #35 print
INFO  02:06:08,702 - #16 (
INFO  02:06:08,702 - #45 r
INFO  02:06:08,702 - #17 )
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #33 continue
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #27 }
INFO  02:06:08,702 - #43 array
INFO  02:06:08,702 - #22 =
INFO  02:06:08,702 - #18 new
INFO  02:06:08,702 - #43 int
INFO  02:06:08,702 - #14 [
INFO  02:06:08,702 - #43 size
INFO  02:06:08,702 - #15 ]
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #43 h
INFO  02:06:08,702 - #22 =
INFO  02:06:08,702 - #18 new
INFO  02:06:08,702 - #43 Helper
INFO  02:06:08,702 - #25 ;
INFO  02:06:08,702 - #43 h
INFO  02:06:08,702 - #13 .
INFO  02:06:08,702 - #43 generateArray
INFO  02:06:08,702 - #16 (
INFO  02:06:08,717 - #43 size
INFO  02:06:08,717 - #17 )
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #43 h
INFO  02:06:08,717 - #13 .
INFO  02:06:08,717 - #43 sortArray
INFO  02:06:08,717 - #16 (
INFO  02:06:08,717 - #17 )
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #43 loop
INFO  02:06:08,717 - #22 =
INFO  02:06:08,717 - #44 false
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #30 while
INFO  02:06:08,717 - #16 (
INFO  02:06:08,717 - #43 loop
INFO  02:06:08,717 - #17 )
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #43 s
INFO  02:06:08,717 - #22 =
INFO  02:06:08,717 - #18 new
INFO  02:06:08,717 - #43 Search
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #36 read
INFO  02:06:08,717 - #16 (
INFO  02:06:08,717 - #43 elem
INFO  02:06:08,717 - #17 )
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #43 res
INFO  02:06:08,717 - #22 =
INFO  02:06:08,717 - #43 s
INFO  02:06:08,717 - #13 .
INFO  02:06:08,717 - #43 search
INFO  02:06:08,717 - #16 (
INFO  02:06:08,717 - #43 array
INFO  02:06:08,717 - #21 ,
INFO  02:06:08,717 - #42 0
INFO  02:06:08,717 - #21 ,
INFO  02:06:08,717 - #43 size
INFO  02:06:08,717 - #6 -
INFO  02:06:08,717 - #42 1
INFO  02:06:08,717 - #21 ,
INFO  02:06:08,717 - #43 elem
INFO  02:06:08,717 - #17 )
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #43 printSearchResult
INFO  02:06:08,717 - #16 (
INFO  02:06:08,717 - #43 res
INFO  02:06:08,717 - #17 )
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #43 s
INFO  02:06:08,717 - #22 =
INFO  02:06:08,717 - #18 new
INFO  02:06:08,717 - #43 BinarySearch
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #43 res
INFO  02:06:08,717 - #22 =
INFO  02:06:08,717 - #43 s
INFO  02:06:08,717 - #13 .
INFO  02:06:08,717 - #43 search
INFO  02:06:08,717 - #16 (
INFO  02:06:08,717 - #43 array
INFO  02:06:08,717 - #21 ,
INFO  02:06:08,717 - #42 0
INFO  02:06:08,717 - #21 ,
INFO  02:06:08,717 - #43 size
INFO  02:06:08,717 - #6 -
INFO  02:06:08,717 - #42 1
INFO  02:06:08,717 - #21 ,
INFO  02:06:08,717 - #43 elem
INFO  02:06:08,717 - #17 )
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #43 printSearchResult
INFO  02:06:08,717 - #16 (
INFO  02:06:08,717 - #43 res
INFO  02:06:08,717 - #17 )
INFO  02:06:08,717 - #25 ;
INFO  02:06:08,717 - #43 s
INFO  02:06:08,717 - #22 =
INFO  02:06:08,733 - #18 new
INFO  02:06:08,733 - #43 RecursiveBinarySearch
INFO  02:06:08,733 - #25 ;
INFO  02:06:08,733 - #43 res
INFO  02:06:08,733 - #22 =
INFO  02:06:08,733 - #43 s
INFO  02:06:08,733 - #13 .
INFO  02:06:08,733 - #43 search
INFO  02:06:08,733 - #16 (
INFO  02:06:08,733 - #43 array
INFO  02:06:08,733 - #21 ,
INFO  02:06:08,733 - #42 0
INFO  02:06:08,733 - #21 ,
INFO  02:06:08,733 - #43 size
INFO  02:06:08,733 - #6 -
INFO  02:06:08,733 - #42 1
INFO  02:06:08,733 - #21 ,
INFO  02:06:08,733 - #43 elem
INFO  02:06:08,733 - #17 )
INFO  02:06:08,733 - #25 ;
INFO  02:06:08,733 - #43 printSearchResult
INFO  02:06:08,733 - #16 (
INFO  02:06:08,733 - #43 res
INFO  02:06:08,733 - #17 )
INFO  02:06:08,733 - #25 ;
INFO  02:06:08,733 - #27 }
INFO  02:06:08,733 - #27 }
ERROR 02:06:08,733 - Fatalna greska, parsiranje se ne moze nastaviti lokalnih promenljivih  na liniji 144
