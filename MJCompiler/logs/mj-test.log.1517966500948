INFO  02:15:44,787 - #39 program
INFO  02:15:44,796 - #43 kod_gen
INFO  02:15:44,797 - #43 int
INFO  02:15:44,802 - #43 array
INFO  02:15:44,804 - #14 [
INFO  02:15:44,804 - #15 ]
INFO  02:15:44,805 - #25 ;
INFO  02:15:44,810 - #38 class
INFO  02:15:44,812 - #43 Search
INFO  02:15:44,812 - #26 {
INFO  02:15:44,816 - #26 {
INFO  02:15:44,822 - #43 int
INFO  02:15:44,825 - #43 search
INFO  02:15:44,826 - #16 (
INFO  02:15:44,828 - #43 int
INFO  02:15:44,829 - #43 array
INFO  02:15:44,829 - #14 [
INFO  02:15:44,829 - #15 ]
INFO  02:15:44,830 - #21 ,
INFO  02:15:44,833 - #43 int
INFO  02:15:44,833 - #43 l
INFO  02:15:44,834 - #21 ,
INFO  02:15:44,836 - #43 int
INFO  02:15:44,837 - #43 r
INFO  02:15:44,837 - #21 ,
INFO  02:15:44,839 - #43 int
INFO  02:15:44,839 - #43 x
INFO  02:15:44,840 - #17 )
INFO  02:15:44,843 - #26 {
INFO  02:15:44,843 - #28 if
INFO  02:15:44,848 - #16 (
INFO  02:15:44,848 - #43 l
INFO  02:15:44,848 - #9 >
INFO  02:15:44,852 - #43 r
INFO  02:15:44,856 - #17 )
INFO  02:15:44,856 - #34 return
INFO  02:15:44,856 - #6 -
INFO  02:15:44,856 - #42 1
INFO  02:15:44,856 - #25 ;
INFO  02:15:44,856 - #29 do
INFO  02:15:44,856 - #26 {
INFO  02:15:44,856 - #28 if
INFO  02:15:44,872 - #16 (
INFO  02:15:44,872 - #43 array
INFO  02:15:44,872 - #14 [
INFO  02:15:44,872 - #43 l
INFO  02:15:44,872 - #15 ]
INFO  02:15:44,872 - #7 ==
INFO  02:15:44,872 - #43 x
INFO  02:15:44,872 - #17 )
INFO  02:15:44,872 - #26 {
INFO  02:15:44,872 - #34 return
INFO  02:15:44,872 - #6 -
INFO  02:15:44,872 - #43 l
INFO  02:15:44,872 - #25 ;
INFO  02:15:44,872 - #27 }
INFO  02:15:44,872 - #32 else
INFO  02:15:44,887 - #43 l
INFO  02:15:44,887 - #23 ++
INFO  02:15:44,887 - #25 ;
INFO  02:15:44,887 - #27 }
INFO  02:15:44,887 - #30 while
INFO  02:15:44,887 - #16 (
INFO  02:15:44,903 - #43 l
INFO  02:15:44,903 - #12 <=
INFO  02:15:44,903 - #43 r
INFO  02:15:44,903 - #17 )
INFO  02:15:44,903 - #25 ;
INFO  02:15:44,903 - #34 return
INFO  02:15:44,903 - #6 -
INFO  02:15:44,903 - #42 1
INFO  02:15:44,903 - #25 ;
INFO  02:15:44,903 - #27 }
INFO  02:15:44,903 - #27 }
INFO  02:15:44,903 - #27 }
INFO  02:15:44,903 - #38 class
INFO  02:15:44,903 - #43 RecursiveBinarySearch
INFO  02:15:44,903 - #41 extends
INFO  02:15:44,903 - #43 Search
INFO  02:15:44,903 - #26 {
INFO  02:15:44,903 - #26 {
INFO  02:15:44,903 - #43 int
INFO  02:15:44,903 - #43 search
INFO  02:15:44,903 - #16 (
INFO  02:15:44,903 - #43 int
INFO  02:15:44,903 - #43 array
INFO  02:15:44,903 - #14 [
INFO  02:15:44,903 - #15 ]
INFO  02:15:44,903 - #21 ,
INFO  02:15:44,903 - #43 int
INFO  02:15:44,903 - #43 l
INFO  02:15:44,903 - #21 ,
INFO  02:15:44,903 - #43 int
INFO  02:15:44,903 - #43 r
INFO  02:15:44,903 - #21 ,
INFO  02:15:44,919 - #43 int
INFO  02:15:44,919 - #43 x
INFO  02:15:44,919 - #17 )
INFO  02:15:44,920 - #43 int
INFO  02:15:44,920 - #43 mid
INFO  02:15:44,920 - #25 ;
INFO  02:15:44,920 - #26 {
INFO  02:15:44,921 - #28 if
INFO  02:15:44,921 - #16 (
INFO  02:15:44,922 - #43 r
INFO  02:15:44,922 - #10 >=
INFO  02:15:44,922 - #43 l
INFO  02:15:44,924 - #17 )
INFO  02:15:44,925 - #26 {
INFO  02:15:44,925 - #43 mid
INFO  02:15:44,925 - #22 =
INFO  02:15:44,927 - #43 l
INFO  02:15:44,928 - #5 +
INFO  02:15:44,928 - #16 (
INFO  02:15:44,931 - #43 r
INFO  02:15:44,931 - #6 -
INFO  02:15:44,932 - #43 l
INFO  02:15:44,932 - #17 )
INFO  02:15:44,932 - #3 /
INFO  02:15:44,932 - #42 2
INFO  02:15:44,932 - #25 ;
INFO  02:15:44,932 - #28 if
INFO  02:15:44,932 - #16 (
INFO  02:15:44,932 - #43 array
INFO  02:15:44,932 - #14 [
INFO  02:15:44,932 - #43 mid
INFO  02:15:44,932 - #15 ]
INFO  02:15:44,932 - #7 ==
INFO  02:15:44,932 - #43 x
INFO  02:15:44,932 - #17 )
INFO  02:15:44,932 - #34 return
INFO  02:15:44,932 - #43 mid
INFO  02:15:44,932 - #25 ;
INFO  02:15:44,932 - #28 if
INFO  02:15:44,932 - #16 (
INFO  02:15:44,932 - #43 array
INFO  02:15:44,932 - #14 [
INFO  02:15:44,932 - #43 mid
INFO  02:15:44,932 - #15 ]
INFO  02:15:44,932 - #9 >
INFO  02:15:44,932 - #43 x
INFO  02:15:44,932 - #17 )
INFO  02:15:44,932 - #34 return
INFO  02:15:44,932 - #43 search
INFO  02:15:44,932 - #16 (
INFO  02:15:44,932 - #43 array
INFO  02:15:44,932 - #21 ,
INFO  02:15:44,932 - #43 l
INFO  02:15:44,932 - #21 ,
INFO  02:15:44,932 - #43 mid
INFO  02:15:44,948 - #6 -
INFO  02:15:44,948 - #42 1
INFO  02:15:44,948 - #21 ,
INFO  02:15:44,948 - #43 x
INFO  02:15:44,948 - #17 )
INFO  02:15:44,948 - #25 ;
INFO  02:15:44,948 - #34 return
INFO  02:15:44,948 - #43 search
INFO  02:15:44,948 - #16 (
INFO  02:15:44,948 - #43 array
INFO  02:15:44,948 - #21 ,
INFO  02:15:44,948 - #43 mid
INFO  02:15:44,948 - #5 +
INFO  02:15:44,948 - #42 1
INFO  02:15:44,948 - #21 ,
INFO  02:15:44,948 - #43 r
INFO  02:15:44,948 - #21 ,
INFO  02:15:44,948 - #43 x
INFO  02:15:44,948 - #17 )
INFO  02:15:44,948 - #25 ;
INFO  02:15:44,948 - #27 }
INFO  02:15:44,948 - #34 return
INFO  02:15:44,948 - #6 -
INFO  02:15:44,948 - #42 1
INFO  02:15:44,948 - #25 ;
INFO  02:15:44,948 - #27 }
INFO  02:15:44,948 - #27 }
INFO  02:15:44,948 - #27 }
INFO  02:15:44,948 - #38 class
INFO  02:15:44,948 - #43 BinarySearch
INFO  02:15:44,948 - #41 extends
INFO  02:15:44,948 - #43 Search
INFO  02:15:44,948 - #26 {
INFO  02:15:44,948 - #26 {
INFO  02:15:44,948 - #43 int
INFO  02:15:44,948 - #43 search
INFO  02:15:44,948 - #16 (
INFO  02:15:44,948 - #43 int
INFO  02:15:44,948 - #43 array
INFO  02:15:44,948 - #14 [
INFO  02:15:44,948 - #15 ]
INFO  02:15:44,948 - #21 ,
INFO  02:15:44,948 - #43 int
INFO  02:15:44,948 - #43 l
INFO  02:15:44,948 - #21 ,
INFO  02:15:44,948 - #43 int
INFO  02:15:44,948 - #43 r
INFO  02:15:44,948 - #21 ,
INFO  02:15:44,948 - #43 int
INFO  02:15:44,948 - #43 x
INFO  02:15:44,948 - #17 )
INFO  02:15:44,948 - #43 int
INFO  02:15:44,948 - #43 m
INFO  02:15:44,948 - #25 ;
INFO  02:15:44,948 - #26 {
INFO  02:15:44,948 - #43 l
INFO  02:15:44,948 - #22 =
INFO  02:15:44,948 - #42 0
INFO  02:15:44,948 - #25 ;
INFO  02:15:44,948 - #43 r
INFO  02:15:44,948 - #22 =
INFO  02:15:44,948 - #43 len
INFO  02:15:44,963 - #16 (
INFO  02:15:44,963 - #43 array
INFO  02:15:44,963 - #17 )
INFO  02:15:44,963 - #6 -
INFO  02:15:44,963 - #42 1
INFO  02:15:44,963 - #25 ;
INFO  02:15:44,963 - #29 do
INFO  02:15:44,963 - #26 {
INFO  02:15:44,963 - #43 m
INFO  02:15:44,963 - #22 =
INFO  02:15:44,963 - #43 l
INFO  02:15:44,963 - #5 +
INFO  02:15:44,963 - #16 (
INFO  02:15:44,963 - #43 r
INFO  02:15:44,963 - #6 -
INFO  02:15:44,963 - #43 l
INFO  02:15:44,963 - #17 )
INFO  02:15:44,963 - #3 /
INFO  02:15:44,963 - #42 2
INFO  02:15:44,963 - #25 ;
INFO  02:15:44,963 - #28 if
INFO  02:15:44,963 - #16 (
INFO  02:15:44,963 - #43 array
INFO  02:15:44,963 - #14 [
INFO  02:15:44,963 - #43 m
INFO  02:15:44,963 - #15 ]
INFO  02:15:44,963 - #7 ==
INFO  02:15:44,963 - #43 x
INFO  02:15:44,963 - #17 )
INFO  02:15:44,963 - #34 return
INFO  02:15:44,963 - #43 m
INFO  02:15:44,963 - #25 ;
INFO  02:15:44,963 - #28 if
INFO  02:15:44,963 - #16 (
INFO  02:15:44,963 - #43 array
INFO  02:15:44,963 - #14 [
INFO  02:15:44,963 - #43 m
INFO  02:15:44,963 - #15 ]
INFO  02:15:44,963 - #11 <
INFO  02:15:44,963 - #43 x
INFO  02:15:44,963 - #17 )
INFO  02:15:44,963 - #43 l
INFO  02:15:44,963 - #22 =
INFO  02:15:44,963 - #43 m
INFO  02:15:44,963 - #5 +
INFO  02:15:44,963 - #42 1
INFO  02:15:44,963 - #25 ;
INFO  02:15:44,963 - #32 else
INFO  02:15:44,963 - #43 r
INFO  02:15:44,963 - #22 =
INFO  02:15:44,963 - #43 m
INFO  02:15:44,963 - #6 -
INFO  02:15:44,963 - #42 1
INFO  02:15:44,963 - #25 ;
INFO  02:15:44,963 - #27 }
INFO  02:15:44,963 - #30 while
INFO  02:15:44,963 - #16 (
INFO  02:15:44,963 - #43 l
INFO  02:15:44,963 - #12 <=
INFO  02:15:44,963 - #43 r
INFO  02:15:44,963 - #17 )
INFO  02:15:44,963 - #25 ;
INFO  02:15:44,963 - #34 return
INFO  02:15:44,963 - #6 -
INFO  02:15:44,963 - #42 1
INFO  02:15:44,963 - #25 ;
INFO  02:15:44,963 - #27 }
INFO  02:15:44,963 - #27 }
INFO  02:15:44,963 - #27 }
INFO  02:15:44,963 - #38 class
INFO  02:15:44,963 - #43 Helper
INFO  02:15:44,963 - #26 {
INFO  02:15:44,963 - #26 {
INFO  02:15:44,979 - #37 void
INFO  02:15:44,979 - #43 generateArray
INFO  02:15:44,979 - #16 (
INFO  02:15:44,979 - #43 int
INFO  02:15:44,979 - #43 size
INFO  02:15:44,979 - #17 )
INFO  02:15:44,979 - #43 int
INFO  02:15:44,979 - #43 i
INFO  02:15:44,979 - #25 ;
INFO  02:15:44,979 - #26 {
INFO  02:15:44,979 - #43 i
INFO  02:15:44,979 - #22 =
INFO  02:15:44,979 - #42 0
INFO  02:15:44,979 - #25 ;
INFO  02:15:44,979 - #29 do
INFO  02:15:44,979 - #26 {
INFO  02:15:44,979 - #36 read
INFO  02:15:44,979 - #16 (
INFO  02:15:44,979 - #43 array
INFO  02:15:44,979 - #14 [
INFO  02:15:44,979 - #43 i
INFO  02:15:44,979 - #15 ]
INFO  02:15:44,979 - #17 )
INFO  02:15:44,979 - #25 ;
INFO  02:15:44,979 - #43 i
INFO  02:15:44,979 - #23 ++
INFO  02:15:44,979 - #25 ;
INFO  02:15:44,979 - #27 }
INFO  02:15:44,979 - #30 while
INFO  02:15:44,979 - #16 (
INFO  02:15:44,979 - #43 i
INFO  02:15:44,979 - #11 <
INFO  02:15:44,979 - #43 size
INFO  02:15:44,979 - #17 )
INFO  02:15:44,979 - #25 ;
INFO  02:15:44,979 - #27 }
INFO  02:15:44,979 - #37 void
INFO  02:15:44,979 - #43 sortArray
INFO  02:15:44,979 - #16 (
INFO  02:15:44,979 - #17 )
INFO  02:15:44,979 - #43 int
INFO  02:15:44,979 - #43 n
INFO  02:15:44,979 - #25 ;
INFO  02:15:44,979 - #43 int
INFO  02:15:44,979 - #43 i
INFO  02:15:44,979 - #25 ;
INFO  02:15:44,979 - #43 int
INFO  02:15:44,979 - #43 key
INFO  02:15:44,979 - #25 ;
INFO  02:15:44,979 - #43 int
INFO  02:15:44,979 - #43 j
INFO  02:15:44,979 - #25 ;
INFO  02:15:44,979 - #26 {
INFO  02:15:44,979 - #43 n
INFO  02:15:44,979 - #22 =
INFO  02:15:44,979 - #43 len
INFO  02:15:44,979 - #16 (
INFO  02:15:44,979 - #43 array
INFO  02:15:44,979 - #17 )
INFO  02:15:44,979 - #25 ;
INFO  02:15:44,995 - #43 i
INFO  02:15:44,995 - #22 =
INFO  02:15:44,995 - #42 1
INFO  02:15:44,995 - #25 ;
INFO  02:15:44,995 - #29 do
INFO  02:15:44,995 - #26 {
INFO  02:15:44,995 - #43 key
INFO  02:15:44,995 - #22 =
INFO  02:15:44,995 - #43 array
INFO  02:15:44,995 - #14 [
INFO  02:15:44,995 - #43 i
INFO  02:15:44,995 - #15 ]
INFO  02:15:44,995 - #25 ;
INFO  02:15:44,995 - #43 j
INFO  02:15:44,995 - #22 =
INFO  02:15:44,995 - #43 i
INFO  02:15:44,995 - #6 -
INFO  02:15:44,995 - #42 1
INFO  02:15:44,995 - #25 ;
INFO  02:15:44,995 - #28 if
INFO  02:15:44,995 - #16 (
INFO  02:15:44,995 - #43 j
INFO  02:15:44,995 - #10 >=
INFO  02:15:44,995 - #42 0
INFO  02:15:44,995 - #19 &&
INFO  02:15:44,995 - #43 array
INFO  02:15:44,995 - #14 [
INFO  02:15:44,995 - #43 j
INFO  02:15:44,995 - #15 ]
INFO  02:15:44,995 - #9 >
INFO  02:15:44,995 - #43 key
INFO  02:15:44,995 - #17 )
INFO  02:15:44,995 - #29 do
INFO  02:15:44,995 - #26 {
INFO  02:15:44,995 - #43 array
INFO  02:15:44,995 - #14 [
INFO  02:15:44,995 - #43 j
INFO  02:15:44,995 - #5 +
INFO  02:15:44,995 - #42 1
INFO  02:15:44,995 - #15 ]
INFO  02:15:44,995 - #22 =
INFO  02:15:44,995 - #43 array
INFO  02:15:44,995 - #14 [
INFO  02:15:44,995 - #43 j
INFO  02:15:44,995 - #15 ]
INFO  02:15:44,995 - #25 ;
INFO  02:15:44,995 - #43 j
INFO  02:15:44,995 - #22 =
INFO  02:15:44,995 - #43 j
INFO  02:15:44,995 - #6 -
INFO  02:15:44,995 - #42 1
INFO  02:15:45,010 - #25 ;
INFO  02:15:45,010 - #27 }
INFO  02:15:45,010 - #30 while
INFO  02:15:45,010 - #16 (
INFO  02:15:45,010 - #43 j
INFO  02:15:45,010 - #10 >=
INFO  02:15:45,010 - #42 0
INFO  02:15:45,010 - #19 &&
INFO  02:15:45,010 - #43 array
INFO  02:15:45,010 - #14 [
INFO  02:15:45,010 - #43 j
INFO  02:15:45,010 - #15 ]
INFO  02:15:45,010 - #9 >
INFO  02:15:45,010 - #43 key
INFO  02:15:45,010 - #17 )
INFO  02:15:45,010 - #25 ;
INFO  02:15:45,010 - #43 i
INFO  02:15:45,010 - #23 ++
INFO  02:15:45,010 - #25 ;
INFO  02:15:45,010 - #43 array
INFO  02:15:45,010 - #14 [
INFO  02:15:45,010 - #43 j
INFO  02:15:45,010 - #5 +
INFO  02:15:45,010 - #42 1
INFO  02:15:45,010 - #15 ]
INFO  02:15:45,010 - #22 =
INFO  02:15:45,010 - #43 key
INFO  02:15:45,010 - #25 ;
INFO  02:15:45,010 - #27 }
INFO  02:15:45,010 - #30 while
INFO  02:15:45,010 - #16 (
INFO  02:15:45,010 - #43 i
INFO  02:15:45,010 - #11 <
INFO  02:15:45,010 - #43 n
INFO  02:15:45,010 - #17 )
INFO  02:15:45,010 - #25 ;
INFO  02:15:45,010 - #27 }
INFO  02:15:45,010 - #27 }
INFO  02:15:45,010 - #27 }
INFO  02:15:45,010 - #26 {
INFO  02:15:45,010 - #37 void
INFO  02:15:45,010 - #43 printSearchResult
INFO  02:15:45,010 - #16 (
INFO  02:15:45,010 - #43 int
INFO  02:15:45,010 - #43 res
INFO  02:15:45,010 - #17 )
INFO  02:15:45,010 - #26 {
INFO  02:15:45,010 - #28 if
INFO  02:15:45,010 - #16 (
INFO  02:15:45,010 - #43 res
INFO  02:15:45,010 - #8 !=
INFO  02:15:45,010 - #6 -
INFO  02:15:45,010 - #42 1
INFO  02:15:45,010 - #17 )
INFO  02:15:45,010 - #35 print
INFO  02:15:45,010 - #16 (
INFO  02:15:45,010 - #43 res
INFO  02:15:45,010 - #17 )
INFO  02:15:45,010 - #25 ;
INFO  02:15:45,026 - #32 else
INFO  02:15:45,026 - #26 {
INFO  02:15:45,026 - #35 print
INFO  02:15:45,026 - #16 (
INFO  02:15:45,027 - #45 n
INFO  02:15:45,027 - #17 )
INFO  02:15:45,028 - #25 ;
INFO  02:15:45,028 - #35 print
INFO  02:15:45,028 - #16 (
INFO  02:15:45,028 - #45 o
INFO  02:15:45,028 - #17 )
INFO  02:15:45,028 - #25 ;
INFO  02:15:45,029 - #35 print
INFO  02:15:45,029 - #16 (
INFO  02:15:45,029 - #45 t
INFO  02:15:45,029 - #17 )
INFO  02:15:45,029 - #25 ;
INFO  02:15:45,029 - #35 print
INFO  02:15:45,029 - #16 (
INFO  02:15:45,030 - #45 f
INFO  02:15:45,030 - #17 )
INFO  02:15:45,030 - #25 ;
INFO  02:15:45,030 - #35 print
INFO  02:15:45,030 - #16 (
INFO  02:15:45,030 - #45 o
INFO  02:15:45,031 - #17 )
INFO  02:15:45,031 - #25 ;
INFO  02:15:45,031 - #35 print
INFO  02:15:45,031 - #16 (
INFO  02:15:45,031 - #45 u
INFO  02:15:45,032 - #17 )
INFO  02:15:45,032 - #25 ;
INFO  02:15:45,032 - #35 print
INFO  02:15:45,032 - #16 (
INFO  02:15:45,033 - #45 n
INFO  02:15:45,033 - #17 )
INFO  02:15:45,033 - #25 ;
INFO  02:15:45,033 - #35 print
INFO  02:15:45,033 - #16 (
INFO  02:15:45,033 - #45 d
INFO  02:15:45,034 - #17 )
INFO  02:15:45,034 - #25 ;
INFO  02:15:45,034 - #27 }
INFO  02:15:45,034 - #27 }
INFO  02:15:45,034 - #37 void
INFO  02:15:45,034 - #43 main
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #43 Helper
INFO  02:15:45,035 - #43 h
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #43 int
INFO  02:15:45,035 - #43 size
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #43 bool
INFO  02:15:45,035 - #43 loop
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #43 Search
INFO  02:15:45,035 - #43 s
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #43 int
INFO  02:15:45,035 - #43 res
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #43 int
INFO  02:15:45,035 - #43 elem
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #26 {
INFO  02:15:45,035 - #43 loop
INFO  02:15:45,035 - #22 =
INFO  02:15:45,035 - #44 true
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #29 do
INFO  02:15:45,035 - #26 {
INFO  02:15:45,035 - #36 read
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #43 size
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #28 if
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #43 size
INFO  02:15:45,035 - #12 <=
INFO  02:15:45,035 - #42 0
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #26 {
INFO  02:15:45,035 - #35 print
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #45 s
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #35 print
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #45 i
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #35 print
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #45 z
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #35 print
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #45 e
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #35 print
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #45 e
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #35 print
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #45 r
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #35 print
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #45 r
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #35 print
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #45 o
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #35 print
INFO  02:15:45,035 - #16 (
INFO  02:15:45,035 - #45 r
INFO  02:15:45,035 - #17 )
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,035 - #33 continue
INFO  02:15:45,035 - #25 ;
INFO  02:15:45,051 - #27 }
INFO  02:15:45,051 - #43 array
INFO  02:15:45,051 - #22 =
INFO  02:15:45,051 - #18 new
INFO  02:15:45,051 - #43 int
INFO  02:15:45,051 - #14 [
INFO  02:15:45,051 - #43 size
INFO  02:15:45,051 - #15 ]
INFO  02:15:45,051 - #25 ;
INFO  02:15:45,051 - #43 h
INFO  02:15:45,051 - #22 =
INFO  02:15:45,051 - #18 new
INFO  02:15:45,051 - #43 Helper
INFO  02:15:45,051 - #25 ;
INFO  02:15:45,051 - #43 h
INFO  02:15:45,051 - #13 .
INFO  02:15:45,051 - #43 generateArray
INFO  02:15:45,051 - #16 (
INFO  02:15:45,051 - #43 size
INFO  02:15:45,051 - #17 )
INFO  02:15:45,051 - #25 ;
INFO  02:15:45,051 - #43 h
INFO  02:15:45,051 - #13 .
INFO  02:15:45,051 - #43 sortArray
INFO  02:15:45,051 - #16 (
INFO  02:15:45,051 - #17 )
INFO  02:15:45,051 - #25 ;
INFO  02:15:45,051 - #43 loop
INFO  02:15:45,051 - #22 =
INFO  02:15:45,051 - #44 false
INFO  02:15:45,051 - #25 ;
INFO  02:15:45,051 - #27 }
INFO  02:15:45,051 - #30 while
INFO  02:15:45,051 - #16 (
INFO  02:15:45,051 - #43 loop
INFO  02:15:45,051 - #17 )
INFO  02:15:45,051 - #25 ;
INFO  02:15:45,051 - #43 s
INFO  02:15:45,051 - #22 =
INFO  02:15:45,051 - #18 new
INFO  02:15:45,051 - #43 Search
INFO  02:15:45,051 - #25 ;
INFO  02:15:45,051 - #36 read
INFO  02:15:45,051 - #16 (
INFO  02:15:45,051 - #43 elem
INFO  02:15:45,051 - #17 )
INFO  02:15:45,051 - #25 ;
INFO  02:15:45,051 - #43 res
INFO  02:15:45,051 - #22 =
INFO  02:15:45,051 - #43 s
INFO  02:15:45,051 - #13 .
INFO  02:15:45,051 - #43 search
INFO  02:15:45,051 - #16 (
INFO  02:15:45,051 - #43 array
INFO  02:15:45,051 - #21 ,
INFO  02:15:45,051 - #42 0
INFO  02:15:45,051 - #21 ,
INFO  02:15:45,051 - #43 size
INFO  02:15:45,051 - #6 -
INFO  02:15:45,051 - #42 1
INFO  02:15:45,051 - #21 ,
INFO  02:15:45,051 - #43 elem
INFO  02:15:45,051 - #17 )
INFO  02:15:45,051 - #25 ;
INFO  02:15:45,051 - #43 printSearchResult
INFO  02:15:45,067 - #16 (
INFO  02:15:45,067 - #43 res
INFO  02:15:45,067 - #17 )
INFO  02:15:45,067 - #25 ;
INFO  02:15:45,067 - #43 s
INFO  02:15:45,067 - #22 =
INFO  02:15:45,067 - #18 new
INFO  02:15:45,067 - #43 BinarySearch
INFO  02:15:45,067 - #25 ;
INFO  02:15:45,067 - #43 res
INFO  02:15:45,067 - #22 =
INFO  02:15:45,067 - #43 s
INFO  02:15:45,067 - #13 .
INFO  02:15:45,067 - #43 search
INFO  02:15:45,067 - #16 (
INFO  02:15:45,067 - #43 array
INFO  02:15:45,067 - #21 ,
INFO  02:15:45,067 - #42 0
INFO  02:15:45,067 - #21 ,
INFO  02:15:45,067 - #43 size
INFO  02:15:45,067 - #6 -
INFO  02:15:45,067 - #42 1
INFO  02:15:45,067 - #21 ,
INFO  02:15:45,067 - #43 elem
INFO  02:15:45,067 - #17 )
INFO  02:15:45,067 - #25 ;
INFO  02:15:45,067 - #43 printSearchResult
INFO  02:15:45,067 - #16 (
INFO  02:15:45,067 - #43 res
INFO  02:15:45,067 - #17 )
INFO  02:15:45,067 - #25 ;
INFO  02:15:45,067 - #43 s
INFO  02:15:45,067 - #22 =
INFO  02:15:45,067 - #18 new
INFO  02:15:45,067 - #43 RecursiveBinarySearch
INFO  02:15:45,067 - #25 ;
INFO  02:15:45,067 - #43 res
INFO  02:15:45,067 - #22 =
INFO  02:15:45,067 - #43 s
INFO  02:15:45,067 - #13 .
INFO  02:15:45,067 - #43 search
INFO  02:15:45,067 - #16 (
INFO  02:15:45,067 - #43 array
INFO  02:15:45,067 - #21 ,
INFO  02:15:45,067 - #42 0
INFO  02:15:45,067 - #21 ,
INFO  02:15:45,067 - #43 size
INFO  02:15:45,067 - #6 -
INFO  02:15:45,067 - #42 1
INFO  02:15:45,067 - #21 ,
INFO  02:15:45,067 - #43 elem
INFO  02:15:45,067 - #17 )
INFO  02:15:45,067 - #25 ;
INFO  02:15:45,067 - #43 printSearchResult
INFO  02:15:45,067 - #16 (
INFO  02:15:45,067 - #43 res
INFO  02:15:45,067 - #17 )
INFO  02:15:45,067 - #25 ;
INFO  02:15:45,067 - #27 }
INFO  02:15:45,067 - #27 }
INFO  02:16:21,561 - Detektovana upotreba formalnog parametra l metode search na liniji 5: Var l: Int , 2, 1 
INFO  02:16:21,568 - Detektovana upotreba formalnog parametra r metode search na liniji 5: Var r: Int , 3, 1 
INFO  02:16:21,568 - Detektovana upotreba formalnog parametra array metode search na liniji 8: Var array: Arr of int, 1, 1 
INFO  02:16:21,569 - Detektovana upotreba formalnog parametra l metode search na liniji 8: Var l: Int , 2, 1 
INFO  02:16:21,569 - Detektovan pristup elementu niza array na liniji 8: array: Int , -1, -1 
INFO  02:16:21,569 - Detektovana upotreba formalnog parametra x metode search na liniji 8: Var x: Int , 4, 1 
INFO  02:16:21,569 - Detektovana upotreba formalnog parametra l metode search na liniji 10: Var l: Int , 2, 1 
INFO  02:16:21,569 - Detektovana upotreba formalnog parametra l metode search na liniji 13: Var l: Int , 2, 1 
INFO  02:16:21,569 - Detektovana upotreba formalnog parametra l metode search na liniji 14: Var l: Int , 2, 1 
INFO  02:16:21,569 - Detektovana upotreba formalnog parametra r metode search na liniji 14: Var r: Int , 3, 1 
