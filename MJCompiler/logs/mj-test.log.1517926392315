INFO  15:12:16,087 - Compiling source file: D:\Faks\4. godina\PP1\pp1dz_template\workspace\MJCompiler\test\program.mj
INFO  15:12:19,488 - #39 program
INFO  15:12:19,488 - #43 Program
INFO  15:12:19,489 - #43 int
INFO  15:12:19,538 - #43 a
INFO  15:12:19,602 - #25 ;
INFO  15:12:19,647 - #43 bool
INFO  15:12:19,648 - #43 a
INFO  15:12:19,648 - #25 ;
INFO  15:12:19,649 - #40 const
INFO  15:12:19,649 - #43 int
INFO  15:12:19,649 - #43 c
INFO  15:12:19,649 - #22 =
INFO  15:12:19,650 - #42 5
INFO  15:12:19,650 - #25 ;
INFO  15:12:19,728 - #43 bool
INFO  15:12:19,781 - #5 +
INFO  15:12:19,781 - #21 ,
INFO  15:12:19,781 - #43 s
INFO  15:12:19,781 - #25 ;
INFO  15:12:19,783 - #43 char
ERROR 15:12:19,784 - Sintaksna greska prilikom definisanja globalne promenljive na liniji 5
INFO  15:12:19,844 - #43 dsfg
INFO  15:12:19,844 - #25 ;
INFO  15:12:19,844 - #43 int
INFO  15:12:19,845 - #43 asf
INFO  15:12:19,845 - #25 ;
INFO  15:12:19,845 - #40 const
INFO  15:12:19,845 - #43 bool
INFO  15:12:19,845 - #43 bl
INFO  15:12:19,845 - #22 =
INFO  15:12:19,846 - #44 true
INFO  15:12:19,846 - #25 ;
INFO  15:12:19,846 - #40 const
INFO  15:12:19,847 - #43 int
INFO  15:12:19,847 - #43 dfgew
INFO  15:12:19,847 - #22 =
INFO  15:12:19,847 - #44 true
INFO  15:12:19,848 - #25 ;
INFO  15:12:19,848 - #38 class
INFO  15:12:19,848 - #43 A
INFO  15:12:19,848 - #41 extends
INFO  15:12:19,849 - #42 123
INFO  15:12:19,849 - #26 {
INFO  15:12:19,849 - #43 int
INFO  15:12:19,849 - #43 x
INFO  15:12:19,850 - #14 [
ERROR 15:12:19,850 - Sintaksna greska prilikom extendovanja klase  na liniji 10
INFO  15:12:20,038 - #15 ]
INFO  15:12:20,038 - #21 ,
INFO  15:12:20,066 - #43 y
INFO  15:12:20,066 - #14 [
INFO  15:12:20,066 - #15 ]
INFO  15:12:20,066 - #25 ;
INFO  15:12:20,067 - #43 int
INFO  15:12:20,067 - #5 +
INFO  15:12:20,067 - #21 ,
INFO  15:12:20,067 - #43 s
INFO  15:12:20,068 - #25 ;
INFO  15:12:20,070 - #26 {
ERROR 15:12:20,070 - Sintaksna greska prilikom definisanja  polja klase  na liniji 10
INFO  15:12:20,085 - #43 int
INFO  15:12:20,115 - #43 metoda
INFO  15:12:20,116 - #16 (
INFO  15:12:20,137 - #43 a
INFO  15:12:20,137 - #17 )
INFO  15:12:20,137 - #26 {
INFO  15:12:20,138 - #34 return
INFO  15:12:20,138 - #42 5
ERROR 15:12:20,138 - Greska pri deklaraciji formalnih parametara funkcije  na liniji 12
INFO  15:12:20,337 - #25 ;
INFO  15:12:20,338 - #27 }
INFO  15:12:20,339 - #27 }
INFO  15:12:20,374 - #27 }
INFO  15:12:20,374 - #26 {
INFO  15:12:20,424 - #43 int
INFO  15:12:20,424 - #43 proba
INFO  15:12:20,424 - #16 (
INFO  15:12:20,424 - #43 int
INFO  15:12:20,424 - #43 nov
INFO  15:12:20,425 - #17 )
INFO  15:12:20,425 - #43 int
INFO  15:12:20,426 - #43 s
INFO  15:12:20,426 - #14 [
INFO  15:12:20,426 - #15 ]
INFO  15:12:20,426 - #25 ;
INFO  15:12:20,426 - #26 {
INFO  15:12:20,427 - #43 a
INFO  15:12:20,427 - #22 =
INFO  15:12:20,566 - #42 5
INFO  15:12:20,567 - #25 ;
INFO  15:12:20,567 - #43 nov
INFO  15:12:20,568 - #22 =
INFO  15:12:20,568 - #43 a
INFO  15:12:20,568 - #25 ;
INFO  15:12:20,645 - #43 nov
INFO  15:12:20,645 - #23 ++
INFO  15:12:20,671 - #25 ;
INFO  15:12:20,672 - #28 if
INFO  15:12:20,701 - #16 (
INFO  15:12:20,701 - #43 a
INFO  15:12:20,701 - #11 <
INFO  15:12:20,702 - #42 6
INFO  15:12:20,744 - #17 )
INFO  15:12:20,881 - #43 s
INFO  15:12:20,902 - #22 =
INFO  15:12:20,902 - #18 new
INFO  15:12:20,902 - #43 int
INFO  15:12:20,902 - #14 [
INFO  15:12:20,902 - #43 a
INFO  15:12:20,903 - #15 ]
INFO  15:12:20,903 - #25 ;
INFO  15:12:20,903 - #32 else
INFO  15:12:20,904 - #43 s
INFO  15:12:20,964 - #22 =
INFO  15:12:20,964 - #18 new
INFO  15:12:20,965 - #43 int
INFO  15:12:20,965 - #14 [
INFO  15:12:20,965 - #42 10
INFO  15:12:20,965 - #15 ]
INFO  15:12:20,965 - #25 ;
INFO  15:12:20,965 - #43 s
INFO  15:12:20,966 - #22 =
INFO  15:12:20,967 - #18 new
INFO  15:12:20,967 - #43 char
INFO  15:12:20,967 - #14 [
INFO  15:12:20,967 - #43 bl
INFO  15:12:20,968 - #15 ]
INFO  15:12:20,968 - #25 ;
INFO  15:12:20,968 - #29 do
INFO  15:12:20,969 - #26 {
INFO  15:12:21,046 - #43 nov
INFO  15:12:21,046 - #22 =
INFO  15:12:21,047 - #6 -
INFO  15:12:21,047 - #43 a
INFO  15:12:21,047 - #5 +
INFO  15:12:21,047 - #42 4
INFO  15:12:21,132 - #6 -
INFO  15:12:21,134 - #43 a
INFO  15:12:21,161 - #2 *
INFO  15:12:21,161 - #43 c
INFO  15:12:21,191 - #5 +
INFO  15:12:21,192 - #16 (
INFO  15:12:21,192 - #43 a
INFO  15:12:21,192 - #6 -
INFO  15:12:21,192 - #42 3
INFO  15:12:21,192 - #17 )
INFO  15:12:21,193 - #25 ;
INFO  15:12:21,193 - #43 s
INFO  15:12:21,193 - #22 =
INFO  15:12:21,193 - #6 -
INFO  15:12:21,194 - #43 bl
INFO  15:12:21,194 - #25 ;
INFO  15:12:21,194 - #43 s
INFO  15:12:21,194 - #22 =
INFO  15:12:21,194 - #42 5
INFO  15:12:21,194 - #5 +
INFO  15:12:21,195 - #42 4
INFO  15:12:21,195 - #6 -
INFO  15:12:21,195 - #43 a
INFO  15:12:21,195 - #2 *
INFO  15:12:21,195 - #43 c
INFO  15:12:21,195 - #5 +
INFO  15:12:21,195 - #16 (
INFO  15:12:21,196 - #43 a
INFO  15:12:21,196 - #6 -
INFO  15:12:21,197 - #42 3
INFO  15:12:21,197 - #17 )
INFO  15:12:21,197 - #25 ;
INFO  15:12:21,197 - #28 if
INFO  15:12:21,197 - #16 (
INFO  15:12:21,198 - #43 bl
INFO  15:12:21,198 - #17 )
INFO  15:12:21,198 - #31 break
INFO  15:12:21,198 - #25 ;
INFO  15:12:21,199 - #27 }
INFO  15:12:21,248 - #30 while
INFO  15:12:21,248 - #16 (
INFO  15:12:21,289 - #43 s
INFO  15:12:21,289 - #7 ==
INFO  15:12:21,289 - #18 new
INFO  15:12:21,352 - #43 char
INFO  15:12:21,352 - #14 [
INFO  15:12:21,352 - #42 7
INFO  15:12:21,352 - #15 ]
INFO  15:12:21,352 - #17 )
INFO  15:12:21,353 - #25 ;
INFO  15:12:21,353 - #31 break
INFO  15:12:21,353 - #25 ;
INFO  15:12:21,353 - #34 return
INFO  15:12:21,354 - #43 nov
INFO  15:12:21,354 - #25 ;
INFO  15:12:21,354 - #27 }
INFO  15:12:21,355 - #43 bool
INFO  15:12:21,355 - #43 s
INFO  15:12:21,355 - #16 (
INFO  15:12:21,355 - #43 int
INFO  15:12:21,355 - #43 m
INFO  15:12:21,355 - #17 )
INFO  15:12:21,356 - #43 int
INFO  15:12:21,356 - #43 e
INFO  15:12:21,356 - #14 [
INFO  15:12:21,356 - #15 ]
INFO  15:12:21,356 - #25 ;
INFO  15:12:21,356 - #26 {
INFO  15:12:21,357 - #43 e
INFO  15:12:21,357 - #22 =
INFO  15:12:21,357 - #42 5
INFO  15:12:21,357 - #25 ;
INFO  15:12:21,357 - #34 return
INFO  15:12:21,357 - #44 true
INFO  15:12:21,357 - #25 ;
INFO  15:12:21,358 - #27 }
INFO  15:12:21,358 - #37 void
INFO  15:12:21,358 - #43 main
INFO  15:12:21,385 - #16 (
INFO  15:12:21,386 - #17 )
INFO  15:12:21,469 - #26 {
INFO  15:12:21,470 - #28 if
INFO  15:12:21,470 - #16 (
INFO  15:12:21,470 - #43 c
INFO  15:12:21,470 - #7 ==
INFO  15:12:21,470 - #42 5
INFO  15:12:21,470 - #17 )
INFO  15:12:21,470 - #43 proba
INFO  15:12:21,470 - #16 (
INFO  15:12:21,547 - #6 -
INFO  15:12:21,547 - #42 1
INFO  15:12:21,547 - #17 )
INFO  15:12:21,604 - #25 ;
INFO  15:12:21,604 - #32 else
INFO  15:12:21,605 - #43 proba
INFO  15:12:21,605 - #16 (
INFO  15:12:21,605 - #17 )
INFO  15:12:21,648 - #25 ;
INFO  15:12:21,648 - #33 continue
INFO  15:12:21,648 - #25 ;
INFO  15:12:21,648 - #43 neradim
INFO  15:12:21,687 - #16 (
INFO  15:12:21,687 - #17 )
INFO  15:12:21,687 - #25 ;
INFO  15:12:21,687 - #27 }
INFO  15:12:21,688 - #27 }
INFO  15:12:21,743 - Print calls = 0
ERROR 15:12:21,745 - Parsiranje NIJE uspesno zavrseno!
