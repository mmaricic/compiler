INFO  02:09:17,516 - #39 program
INFO  02:09:17,516 - #43 kod_gen
INFO  02:09:17,516 - #43 int
INFO  02:09:17,532 - #43 array
INFO  02:09:17,532 - #14 [
INFO  02:09:17,532 - #15 ]
INFO  02:09:17,532 - #25 ;
INFO  02:09:17,532 - #38 class
INFO  02:09:17,532 - #43 Search
INFO  02:09:17,532 - #26 {
INFO  02:09:17,532 - #26 {
INFO  02:09:17,547 - #43 int
INFO  02:09:17,547 - #43 search
INFO  02:09:17,547 - #16 (
INFO  02:09:17,547 - #43 int
INFO  02:09:17,547 - #43 arr
INFO  02:09:17,547 - #14 [
INFO  02:09:17,547 - #15 ]
INFO  02:09:17,547 - #21 ,
INFO  02:09:17,547 - #43 int
INFO  02:09:17,547 - #43 l
INFO  02:09:17,547 - #21 ,
INFO  02:09:17,563 - #43 int
INFO  02:09:17,563 - #43 r
INFO  02:09:17,563 - #21 ,
INFO  02:09:17,563 - #43 int
INFO  02:09:17,563 - #43 x
INFO  02:09:17,563 - #17 )
INFO  02:09:17,563 - #26 {
INFO  02:09:17,563 - #28 if
INFO  02:09:17,563 - #16 (
INFO  02:09:17,563 - #43 l
INFO  02:09:17,563 - #9 >
INFO  02:09:17,563 - #43 r
INFO  02:09:17,563 - #17 )
INFO  02:09:17,579 - #34 return
INFO  02:09:17,579 - #6 -
INFO  02:09:17,579 - #42 1
INFO  02:09:17,579 - #25 ;
INFO  02:09:17,579 - #29 do
INFO  02:09:17,579 - #26 {
INFO  02:09:17,594 - #28 if
INFO  02:09:17,594 - #16 (
INFO  02:09:17,594 - #43 array
INFO  02:09:17,594 - #14 [
INFO  02:09:17,594 - #43 l
INFO  02:09:17,594 - #15 ]
INFO  02:09:17,594 - #7 ==
INFO  02:09:17,594 - #43 x
INFO  02:09:17,610 - #17 )
INFO  02:09:17,610 - #26 {
INFO  02:09:17,610 - #34 return
INFO  02:09:17,610 - #6 -
INFO  02:09:17,610 - #43 l
INFO  02:09:17,610 - #25 ;
INFO  02:09:17,610 - #27 }
INFO  02:09:17,610 - #32 else
INFO  02:09:17,610 - #43 l
INFO  02:09:17,610 - #23 ++
INFO  02:09:17,610 - #25 ;
INFO  02:09:17,610 - #27 }
INFO  02:09:17,625 - #30 while
INFO  02:09:17,625 - #16 (
INFO  02:09:17,625 - #43 l
INFO  02:09:17,625 - #12 <=
INFO  02:09:17,625 - #43 r
INFO  02:09:17,625 - #17 )
INFO  02:09:17,625 - #25 ;
INFO  02:09:17,625 - #34 return
INFO  02:09:17,625 - #6 -
INFO  02:09:17,625 - #42 1
INFO  02:09:17,625 - #25 ;
INFO  02:09:17,625 - #27 }
INFO  02:09:17,625 - #27 }
INFO  02:09:17,625 - #27 }
INFO  02:09:17,625 - #38 class
INFO  02:09:17,625 - #43 RecursiveBinarySearch
INFO  02:09:17,625 - #41 extends
INFO  02:09:17,625 - #43 Search
INFO  02:09:17,625 - #26 {
INFO  02:09:17,625 - #26 {
INFO  02:09:17,625 - #43 int
INFO  02:09:17,625 - #43 search
INFO  02:09:17,625 - #16 (
INFO  02:09:17,625 - #43 int
INFO  02:09:17,625 - #43 arr
INFO  02:09:17,625 - #14 [
INFO  02:09:17,625 - #15 ]
INFO  02:09:17,625 - #21 ,
INFO  02:09:17,625 - #43 int
INFO  02:09:17,625 - #43 l
INFO  02:09:17,625 - #21 ,
INFO  02:09:17,625 - #43 int
INFO  02:09:17,641 - #43 r
INFO  02:09:17,641 - #21 ,
INFO  02:09:17,641 - #43 int
INFO  02:09:17,641 - #43 x
INFO  02:09:17,641 - #17 )
INFO  02:09:17,641 - #43 int
INFO  02:09:17,641 - #43 mid
INFO  02:09:17,641 - #25 ;
INFO  02:09:17,641 - #26 {
INFO  02:09:17,641 - #28 if
INFO  02:09:17,641 - #16 (
INFO  02:09:17,641 - #43 r
INFO  02:09:17,641 - #10 >=
INFO  02:09:17,641 - #43 l
INFO  02:09:17,641 - #17 )
INFO  02:09:17,641 - #26 {
INFO  02:09:17,641 - #43 mid
INFO  02:09:17,641 - #22 =
INFO  02:09:17,641 - #43 l
INFO  02:09:17,641 - #5 +
INFO  02:09:17,641 - #16 (
INFO  02:09:17,641 - #43 r
INFO  02:09:17,641 - #6 -
INFO  02:09:17,641 - #43 l
INFO  02:09:17,641 - #17 )
INFO  02:09:17,641 - #3 /
INFO  02:09:17,641 - #42 2
INFO  02:09:17,641 - #25 ;
INFO  02:09:17,657 - #28 if
INFO  02:09:17,658 - #16 (
INFO  02:09:17,658 - #43 array
INFO  02:09:17,658 - #14 [
INFO  02:09:17,658 - #43 mid
INFO  02:09:17,659 - #15 ]
INFO  02:09:17,659 - #7 ==
INFO  02:09:17,659 - #43 x
INFO  02:09:17,660 - #17 )
INFO  02:09:17,660 - #34 return
INFO  02:09:17,660 - #43 mid
INFO  02:09:17,661 - #25 ;
INFO  02:09:17,661 - #28 if
INFO  02:09:17,661 - #16 (
INFO  02:09:17,663 - #43 array
INFO  02:09:17,663 - #14 [
INFO  02:09:17,663 - #43 mid
INFO  02:09:17,663 - #15 ]
INFO  02:09:17,664 - #9 >
INFO  02:09:17,664 - #43 x
INFO  02:09:17,664 - #17 )
INFO  02:09:17,664 - #34 return
INFO  02:09:17,665 - #43 search
INFO  02:09:17,665 - #16 (
INFO  02:09:17,667 - #43 array
INFO  02:09:17,667 - #21 ,
INFO  02:09:17,667 - #43 l
INFO  02:09:17,667 - #21 ,
INFO  02:09:17,668 - #43 mid
INFO  02:09:17,668 - #6 -
INFO  02:09:17,668 - #42 1
INFO  02:09:17,668 - #21 ,
INFO  02:09:17,668 - #43 x
INFO  02:09:17,669 - #17 )
INFO  02:09:17,673 - #25 ;
INFO  02:09:17,674 - #34 return
INFO  02:09:17,674 - #43 search
INFO  02:09:17,674 - #16 (
INFO  02:09:17,674 - #43 array
INFO  02:09:17,674 - #21 ,
INFO  02:09:17,676 - #43 mid
INFO  02:09:17,676 - #5 +
INFO  02:09:17,676 - #42 1
INFO  02:09:17,676 - #21 ,
INFO  02:09:17,677 - #43 r
INFO  02:09:17,677 - #21 ,
INFO  02:09:17,677 - #43 x
INFO  02:09:17,677 - #17 )
INFO  02:09:17,677 - #25 ;
INFO  02:09:17,678 - #27 }
INFO  02:09:17,678 - #34 return
INFO  02:09:17,678 - #6 -
INFO  02:09:17,679 - #42 1
INFO  02:09:17,679 - #25 ;
INFO  02:09:17,679 - #27 }
INFO  02:09:17,679 - #27 }
INFO  02:09:17,680 - #27 }
INFO  02:09:17,680 - #38 class
INFO  02:09:17,680 - #43 BinarySearch
INFO  02:09:17,680 - #41 extends
INFO  02:09:17,681 - #43 Search
INFO  02:09:17,681 - #26 {
INFO  02:09:17,681 - #26 {
INFO  02:09:17,681 - #43 int
INFO  02:09:17,681 - #43 search
INFO  02:09:17,682 - #16 (
INFO  02:09:17,682 - #43 int
INFO  02:09:17,682 - #43 array
INFO  02:09:17,682 - #14 [
INFO  02:09:17,682 - #15 ]
INFO  02:09:17,683 - #21 ,
INFO  02:09:17,683 - #43 int
INFO  02:09:17,683 - #43 l
INFO  02:09:17,683 - #21 ,
INFO  02:09:17,683 - #43 int
INFO  02:09:17,684 - #43 r
INFO  02:09:17,684 - #21 ,
INFO  02:09:17,684 - #43 int
INFO  02:09:17,684 - #43 x
INFO  02:09:17,684 - #17 )
INFO  02:09:17,684 - #43 int
INFO  02:09:17,685 - #43 m
INFO  02:09:17,685 - #25 ;
INFO  02:09:17,685 - #26 {
INFO  02:09:17,685 - #43 l
INFO  02:09:17,685 - #22 =
INFO  02:09:17,685 - #42 0
INFO  02:09:17,686 - #25 ;
INFO  02:09:17,686 - #43 r
INFO  02:09:17,686 - #22 =
INFO  02:09:17,686 - #43 len
INFO  02:09:17,686 - #16 (
INFO  02:09:17,686 - #43 array
INFO  02:09:17,686 - #17 )
INFO  02:09:17,687 - #6 -
INFO  02:09:17,687 - #42 1
INFO  02:09:17,687 - #25 ;
INFO  02:09:17,687 - #29 do
INFO  02:09:17,687 - #26 {
INFO  02:09:17,687 - #43 m
INFO  02:09:17,688 - #22 =
INFO  02:09:17,688 - #43 l
INFO  02:09:17,688 - #5 +
INFO  02:09:17,688 - #16 (
INFO  02:09:17,688 - #43 r
INFO  02:09:17,688 - #6 -
INFO  02:09:17,688 - #43 l
INFO  02:09:17,689 - #17 )
INFO  02:09:17,689 - #3 /
INFO  02:09:17,689 - #42 2
INFO  02:09:17,689 - #25 ;
INFO  02:09:17,689 - #28 if
INFO  02:09:17,689 - #16 (
INFO  02:09:17,689 - #43 array
INFO  02:09:17,690 - #14 [
INFO  02:09:17,690 - #43 m
INFO  02:09:17,690 - #15 ]
INFO  02:09:17,690 - #7 ==
INFO  02:09:17,690 - #43 x
INFO  02:09:17,691 - #17 )
INFO  02:09:17,691 - #34 return
INFO  02:09:17,693 - #43 m
INFO  02:09:17,693 - #25 ;
INFO  02:09:17,694 - #28 if
INFO  02:09:17,694 - #16 (
INFO  02:09:17,694 - #43 array
INFO  02:09:17,694 - #14 [
INFO  02:09:17,694 - #43 m
INFO  02:09:17,695 - #15 ]
INFO  02:09:17,697 - #11 <
INFO  02:09:17,697 - #43 x
INFO  02:09:17,698 - #17 )
INFO  02:09:17,698 - #43 l
INFO  02:09:17,698 - #22 =
INFO  02:09:17,698 - #43 m
INFO  02:09:17,698 - #5 +
INFO  02:09:17,698 - #42 1
INFO  02:09:17,698 - #25 ;
INFO  02:09:17,698 - #32 else
INFO  02:09:17,698 - #43 r
INFO  02:09:17,698 - #22 =
INFO  02:09:17,698 - #43 m
INFO  02:09:17,698 - #6 -
INFO  02:09:17,698 - #42 1
INFO  02:09:17,698 - #25 ;
INFO  02:09:17,698 - #27 }
INFO  02:09:17,698 - #30 while
INFO  02:09:17,698 - #16 (
INFO  02:09:17,698 - #43 l
INFO  02:09:17,698 - #12 <=
INFO  02:09:17,698 - #43 r
INFO  02:09:17,698 - #17 )
INFO  02:09:17,698 - #25 ;
INFO  02:09:17,698 - #34 return
INFO  02:09:17,698 - #6 -
INFO  02:09:17,698 - #42 1
INFO  02:09:17,698 - #25 ;
INFO  02:09:17,698 - #27 }
INFO  02:09:17,698 - #27 }
INFO  02:09:17,698 - #27 }
INFO  02:09:17,698 - #38 class
INFO  02:09:17,698 - #43 Helper
INFO  02:09:17,698 - #26 {
INFO  02:09:17,698 - #26 {
INFO  02:09:17,698 - #37 void
INFO  02:09:17,698 - #43 generateArray
INFO  02:09:17,698 - #16 (
INFO  02:09:17,698 - #43 int
INFO  02:09:17,698 - #43 size
INFO  02:09:17,698 - #17 )
INFO  02:09:17,698 - #43 int
INFO  02:09:17,698 - #43 i
INFO  02:09:17,698 - #25 ;
INFO  02:09:17,698 - #26 {
INFO  02:09:17,698 - #43 i
INFO  02:09:17,698 - #22 =
INFO  02:09:17,698 - #42 0
INFO  02:09:17,698 - #25 ;
INFO  02:09:17,698 - #29 do
INFO  02:09:17,698 - #26 {
INFO  02:09:17,698 - #36 read
INFO  02:09:17,698 - #16 (
INFO  02:09:17,698 - #43 array
INFO  02:09:17,698 - #14 [
INFO  02:09:17,698 - #43 i
INFO  02:09:17,698 - #15 ]
INFO  02:09:17,698 - #17 )
INFO  02:09:17,698 - #25 ;
INFO  02:09:17,698 - #43 i
INFO  02:09:17,698 - #23 ++
INFO  02:09:17,698 - #25 ;
INFO  02:09:17,698 - #27 }
INFO  02:09:17,698 - #30 while
INFO  02:09:17,698 - #16 (
INFO  02:09:17,698 - #43 i
INFO  02:09:17,698 - #11 <
INFO  02:09:17,698 - #43 size
INFO  02:09:17,698 - #17 )
INFO  02:09:17,698 - #25 ;
INFO  02:09:17,698 - #27 }
INFO  02:09:17,714 - #37 void
INFO  02:09:17,714 - #43 sortArray
INFO  02:09:17,714 - #16 (
INFO  02:09:17,714 - #17 )
INFO  02:09:17,714 - #43 int
INFO  02:09:17,714 - #43 n
INFO  02:09:17,714 - #25 ;
INFO  02:09:17,714 - #43 int
INFO  02:09:17,714 - #43 i
INFO  02:09:17,714 - #25 ;
INFO  02:09:17,714 - #43 int
INFO  02:09:17,714 - #43 key
INFO  02:09:17,714 - #25 ;
INFO  02:09:17,714 - #43 int
INFO  02:09:17,714 - #43 j
INFO  02:09:17,714 - #25 ;
INFO  02:09:17,714 - #26 {
INFO  02:09:17,714 - #43 n
INFO  02:09:17,714 - #22 =
INFO  02:09:17,714 - #43 len
INFO  02:09:17,714 - #16 (
INFO  02:09:17,714 - #43 array
INFO  02:09:17,714 - #17 )
INFO  02:09:17,714 - #25 ;
INFO  02:09:17,714 - #43 i
INFO  02:09:17,714 - #22 =
INFO  02:09:17,714 - #42 1
INFO  02:09:17,714 - #25 ;
INFO  02:09:17,714 - #29 do
INFO  02:09:17,714 - #26 {
INFO  02:09:17,714 - #43 key
INFO  02:09:17,714 - #22 =
INFO  02:09:17,714 - #43 array
INFO  02:09:17,714 - #14 [
INFO  02:09:17,714 - #43 i
INFO  02:09:17,714 - #15 ]
INFO  02:09:17,714 - #25 ;
INFO  02:09:17,714 - #43 j
INFO  02:09:17,714 - #22 =
INFO  02:09:17,714 - #43 i
INFO  02:09:17,714 - #6 -
INFO  02:09:17,714 - #42 1
INFO  02:09:17,714 - #25 ;
INFO  02:09:17,714 - #28 if
INFO  02:09:17,714 - #16 (
INFO  02:09:17,714 - #43 j
INFO  02:09:17,714 - #10 >=
INFO  02:09:17,714 - #42 0
INFO  02:09:17,714 - #19 &&
INFO  02:09:17,714 - #43 array
INFO  02:09:17,714 - #14 [
INFO  02:09:17,714 - #43 j
INFO  02:09:17,714 - #15 ]
INFO  02:09:17,714 - #9 >
INFO  02:09:17,714 - #43 key
INFO  02:09:17,714 - #17 )
INFO  02:09:17,714 - #29 do
INFO  02:09:17,714 - #26 {
INFO  02:09:17,714 - #43 array
INFO  02:09:17,714 - #14 [
INFO  02:09:17,714 - #43 j
INFO  02:09:17,714 - #5 +
INFO  02:09:17,714 - #42 1
INFO  02:09:17,714 - #15 ]
INFO  02:09:17,714 - #22 =
INFO  02:09:17,714 - #43 array
INFO  02:09:17,714 - #14 [
INFO  02:09:17,714 - #43 j
INFO  02:09:17,714 - #15 ]
INFO  02:09:17,714 - #25 ;
INFO  02:09:17,714 - #43 j
INFO  02:09:17,714 - #22 =
INFO  02:09:17,714 - #43 j
INFO  02:09:17,714 - #6 -
INFO  02:09:17,714 - #42 1
INFO  02:09:17,714 - #25 ;
INFO  02:09:17,714 - #27 }
INFO  02:09:17,714 - #30 while
INFO  02:09:17,714 - #16 (
INFO  02:09:17,714 - #43 j
INFO  02:09:17,714 - #10 >=
INFO  02:09:17,714 - #42 0
INFO  02:09:17,714 - #19 &&
INFO  02:09:17,730 - #43 array
INFO  02:09:17,730 - #14 [
INFO  02:09:17,730 - #43 j
INFO  02:09:17,730 - #15 ]
INFO  02:09:17,730 - #9 >
INFO  02:09:17,730 - #43 key
INFO  02:09:17,730 - #17 )
INFO  02:09:17,730 - #25 ;
INFO  02:09:17,730 - #43 i
INFO  02:09:17,730 - #23 ++
INFO  02:09:17,730 - #25 ;
INFO  02:09:17,730 - #43 array
INFO  02:09:17,730 - #14 [
INFO  02:09:17,730 - #43 j
INFO  02:09:17,730 - #5 +
INFO  02:09:17,730 - #42 1
INFO  02:09:17,730 - #15 ]
INFO  02:09:17,730 - #22 =
INFO  02:09:17,730 - #43 key
INFO  02:09:17,730 - #25 ;
INFO  02:09:17,730 - #27 }
INFO  02:09:17,730 - #30 while
INFO  02:09:17,730 - #16 (
INFO  02:09:17,730 - #43 i
INFO  02:09:17,730 - #11 <
INFO  02:09:17,730 - #43 n
INFO  02:09:17,730 - #17 )
INFO  02:09:17,730 - #25 ;
INFO  02:09:17,730 - #27 }
INFO  02:09:17,730 - #27 }
INFO  02:09:17,730 - #27 }
INFO  02:09:17,730 - #26 {
INFO  02:09:17,730 - #37 void
INFO  02:09:17,730 - #43 printSearchResult
INFO  02:09:17,730 - #16 (
INFO  02:09:17,730 - #43 int
INFO  02:09:17,730 - #43 res
INFO  02:09:17,730 - #17 )
INFO  02:09:17,730 - #26 {
INFO  02:09:17,730 - #28 if
INFO  02:09:17,730 - #16 (
INFO  02:09:17,730 - #43 res
INFO  02:09:17,730 - #8 !=
INFO  02:09:17,730 - #6 -
INFO  02:09:17,730 - #42 1
INFO  02:09:17,730 - #17 )
INFO  02:09:17,730 - #35 print
INFO  02:09:17,730 - #16 (
INFO  02:09:17,730 - #43 res
INFO  02:09:17,730 - #17 )
INFO  02:09:17,730 - #25 ;
INFO  02:09:17,730 - #32 else
INFO  02:09:17,745 - #26 {
INFO  02:09:17,745 - #35 print
INFO  02:09:17,745 - #16 (
INFO  02:09:17,745 - #45 n
INFO  02:09:17,745 - #17 )
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #35 print
INFO  02:09:17,745 - #16 (
INFO  02:09:17,745 - #45 o
INFO  02:09:17,745 - #17 )
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #35 print
INFO  02:09:17,745 - #16 (
INFO  02:09:17,745 - #45 t
INFO  02:09:17,745 - #17 )
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #35 print
INFO  02:09:17,745 - #16 (
INFO  02:09:17,745 - #45 f
INFO  02:09:17,745 - #17 )
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #35 print
INFO  02:09:17,745 - #16 (
INFO  02:09:17,745 - #45 o
INFO  02:09:17,745 - #17 )
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #35 print
INFO  02:09:17,745 - #16 (
INFO  02:09:17,745 - #45 u
INFO  02:09:17,745 - #17 )
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #35 print
INFO  02:09:17,745 - #16 (
INFO  02:09:17,745 - #45 n
INFO  02:09:17,745 - #17 )
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #35 print
INFO  02:09:17,745 - #16 (
INFO  02:09:17,745 - #45 d
INFO  02:09:17,745 - #17 )
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #27 }
INFO  02:09:17,745 - #27 }
INFO  02:09:17,745 - #37 void
INFO  02:09:17,745 - #43 main
INFO  02:09:17,745 - #16 (
INFO  02:09:17,745 - #17 )
INFO  02:09:17,745 - #43 Helper
INFO  02:09:17,745 - #43 h
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #43 int
INFO  02:09:17,745 - #43 size
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #43 bool
INFO  02:09:17,745 - #43 loop
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #43 Search
INFO  02:09:17,745 - #43 s
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #43 int
INFO  02:09:17,745 - #43 res
INFO  02:09:17,745 - #25 ;
INFO  02:09:17,745 - #43 int
INFO  02:09:17,758 - #43 elem
INFO  02:09:17,758 - #25 ;
INFO  02:09:17,758 - #26 {
INFO  02:09:17,758 - #43 loop
INFO  02:09:17,759 - #22 =
INFO  02:09:17,759 - #44 true
INFO  02:09:17,759 - #25 ;
INFO  02:09:17,760 - #29 do
INFO  02:09:17,760 - #26 {
INFO  02:09:17,760 - #36 read
INFO  02:09:17,760 - #16 (
INFO  02:09:17,760 - #43 size
INFO  02:09:17,761 - #17 )
INFO  02:09:17,761 - #25 ;
INFO  02:09:17,761 - #28 if
INFO  02:09:17,761 - #16 (
INFO  02:09:17,761 - #43 size
INFO  02:09:17,761 - #12 <=
INFO  02:09:17,762 - #42 0
INFO  02:09:17,762 - #17 )
INFO  02:09:17,762 - #26 {
INFO  02:09:17,762 - #35 print
INFO  02:09:17,762 - #16 (
INFO  02:09:17,763 - #45 s
INFO  02:09:17,763 - #17 )
INFO  02:09:17,763 - #25 ;
INFO  02:09:17,763 - #35 print
INFO  02:09:17,763 - #16 (
INFO  02:09:17,763 - #45 i
INFO  02:09:17,764 - #17 )
INFO  02:09:17,764 - #25 ;
INFO  02:09:17,764 - #35 print
INFO  02:09:17,764 - #16 (
INFO  02:09:17,764 - #45 z
INFO  02:09:17,764 - #17 )
INFO  02:09:17,764 - #25 ;
INFO  02:09:17,765 - #35 print
INFO  02:09:17,765 - #16 (
INFO  02:09:17,765 - #45 e
INFO  02:09:17,765 - #17 )
INFO  02:09:17,766 - #25 ;
INFO  02:09:17,766 - #35 print
INFO  02:09:17,766 - #16 (
INFO  02:09:17,766 - #45 e
INFO  02:09:17,767 - #17 )
INFO  02:09:17,767 - #25 ;
INFO  02:09:17,767 - #35 print
INFO  02:09:17,767 - #16 (
INFO  02:09:17,768 - #45 r
INFO  02:09:17,768 - #17 )
INFO  02:09:17,768 - #25 ;
INFO  02:09:17,768 - #35 print
INFO  02:09:17,769 - #16 (
INFO  02:09:17,769 - #45 r
INFO  02:09:17,769 - #17 )
INFO  02:09:17,769 - #25 ;
INFO  02:09:17,769 - #35 print
INFO  02:09:17,770 - #16 (
INFO  02:09:17,770 - #45 o
INFO  02:09:17,770 - #17 )
INFO  02:09:17,770 - #25 ;
INFO  02:09:17,770 - #35 print
INFO  02:09:17,770 - #16 (
INFO  02:09:17,771 - #45 r
INFO  02:09:17,771 - #17 )
INFO  02:09:17,771 - #25 ;
INFO  02:09:17,771 - #33 continue
INFO  02:09:17,771 - #25 ;
INFO  02:09:17,771 - #27 }
INFO  02:09:17,773 - #43 array
INFO  02:09:17,773 - #22 =
INFO  02:09:17,773 - #18 new
INFO  02:09:17,773 - #43 int
INFO  02:09:17,774 - #14 [
INFO  02:09:17,774 - #43 size
INFO  02:09:17,774 - #15 ]
INFO  02:09:17,774 - #25 ;
INFO  02:09:17,775 - #43 h
INFO  02:09:17,775 - #22 =
INFO  02:09:17,775 - #18 new
INFO  02:09:17,775 - #43 Helper
INFO  02:09:17,776 - #25 ;
INFO  02:09:17,776 - #43 h
INFO  02:09:17,776 - #13 .
INFO  02:09:17,777 - #43 generateArray
INFO  02:09:17,777 - #16 (
INFO  02:09:17,777 - #43 size
INFO  02:09:17,777 - #17 )
INFO  02:09:17,778 - #25 ;
INFO  02:09:17,778 - #43 h
INFO  02:09:17,779 - #13 .
INFO  02:09:17,779 - #43 sortArray
INFO  02:09:17,779 - #16 (
INFO  02:09:17,779 - #17 )
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #43 loop
INFO  02:09:17,781 - #22 =
INFO  02:09:17,781 - #44 false
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #27 }
INFO  02:09:17,781 - #30 while
INFO  02:09:17,781 - #16 (
INFO  02:09:17,781 - #43 loop
INFO  02:09:17,781 - #17 )
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #43 s
INFO  02:09:17,781 - #22 =
INFO  02:09:17,781 - #18 new
INFO  02:09:17,781 - #43 Search
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #36 read
INFO  02:09:17,781 - #16 (
INFO  02:09:17,781 - #43 elem
INFO  02:09:17,781 - #17 )
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #43 res
INFO  02:09:17,781 - #22 =
INFO  02:09:17,781 - #43 s
INFO  02:09:17,781 - #13 .
INFO  02:09:17,781 - #43 search
INFO  02:09:17,781 - #16 (
INFO  02:09:17,781 - #43 array
INFO  02:09:17,781 - #21 ,
INFO  02:09:17,781 - #42 0
INFO  02:09:17,781 - #21 ,
INFO  02:09:17,781 - #43 size
INFO  02:09:17,781 - #6 -
INFO  02:09:17,781 - #42 1
INFO  02:09:17,781 - #21 ,
INFO  02:09:17,781 - #43 elem
INFO  02:09:17,781 - #17 )
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #43 printSearchResult
INFO  02:09:17,781 - #16 (
INFO  02:09:17,781 - #43 res
INFO  02:09:17,781 - #17 )
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #43 s
INFO  02:09:17,781 - #22 =
INFO  02:09:17,781 - #18 new
INFO  02:09:17,781 - #43 BinarySearch
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #43 res
INFO  02:09:17,781 - #22 =
INFO  02:09:17,781 - #43 s
INFO  02:09:17,781 - #13 .
INFO  02:09:17,781 - #43 search
INFO  02:09:17,781 - #16 (
INFO  02:09:17,781 - #43 array
INFO  02:09:17,781 - #21 ,
INFO  02:09:17,781 - #42 0
INFO  02:09:17,781 - #21 ,
INFO  02:09:17,781 - #43 size
INFO  02:09:17,781 - #6 -
INFO  02:09:17,781 - #42 1
INFO  02:09:17,781 - #21 ,
INFO  02:09:17,781 - #43 elem
INFO  02:09:17,781 - #17 )
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #43 printSearchResult
INFO  02:09:17,781 - #16 (
INFO  02:09:17,781 - #43 res
INFO  02:09:17,781 - #17 )
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #43 s
INFO  02:09:17,781 - #22 =
INFO  02:09:17,781 - #18 new
INFO  02:09:17,781 - #43 RecursiveBinarySearch
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #43 res
INFO  02:09:17,781 - #22 =
INFO  02:09:17,781 - #43 s
INFO  02:09:17,781 - #13 .
INFO  02:09:17,781 - #43 search
INFO  02:09:17,781 - #16 (
INFO  02:09:17,781 - #43 array
INFO  02:09:17,781 - #21 ,
INFO  02:09:17,781 - #42 0
INFO  02:09:17,781 - #21 ,
INFO  02:09:17,781 - #43 size
INFO  02:09:17,781 - #6 -
INFO  02:09:17,781 - #42 1
INFO  02:09:17,781 - #21 ,
INFO  02:09:17,781 - #43 elem
INFO  02:09:17,781 - #17 )
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #43 printSearchResult
INFO  02:09:17,781 - #16 (
INFO  02:09:17,781 - #43 res
INFO  02:09:17,781 - #17 )
INFO  02:09:17,781 - #25 ;
INFO  02:09:17,781 - #27 }
INFO  02:09:17,781 - #27 }
INFO  02:09:17,844 - Detektovana upotreba formalnog parametra l metode search na liniji 5: Var l: Int , 2, 1 
INFO  02:09:17,844 - Detektovana upotreba formalnog parametra r metode search na liniji 5: Var r: Int , 3, 1 
INFO  02:09:17,844 - Detektovana upotreba globalne promenljive array na liniji 8: Var array: Arr of int, 0, 0 
INFO  02:09:17,844 - Detektovana upotreba formalnog parametra l metode search na liniji 8: Var l: Int , 2, 1 
INFO  02:09:17,844 - Detektovan pristup elementu niza array na liniji 8: array: Int , -1, -1 
INFO  02:09:17,844 - Detektovana upotreba formalnog parametra x metode search na liniji 8: Var x: Int , 4, 1 
INFO  02:09:17,844 - Detektovana upotreba formalnog parametra l metode search na liniji 10: Var l: Int , 2, 1 
INFO  02:09:17,844 - Detektovana upotreba formalnog parametra l metode search na liniji 13: Var l: Int , 2, 1 
INFO  02:09:17,844 - Detektovana upotreba formalnog parametra l metode search na liniji 14: Var l: Int , 2, 1 
INFO  02:09:17,844 - Detektovana upotreba formalnog parametra r metode search na liniji 14: Var r: Int , 3, 1 
ERROR 02:09:17,859 - Semanticka greska na liniji 27: prilikom redefinisanja metode potpis mora ostati isti - tipovi argumenata se ne smeju menjati!
ERROR 02:09:17,859 - Semanticka greska na liniji 27: broj argumenata redefinisane metode ne sme biti manji od one koju redefinise!
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra r metode search na liniji 29: Var r: Int , 2, 1 
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra l metode search na liniji 29: Var l: Int , 1, 1 
INFO  02:09:17,859 - Detektovana upotreba lokalne promenljive mid metode search na liniji 31: Var mid: Int , 4, 1 
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra l metode search na liniji 31: Var l: Int , 1, 1 
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra r metode search na liniji 31: Var r: Int , 2, 1 
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra l metode search na liniji 31: Var l: Int , 1, 1 
INFO  02:09:17,859 - Detektovana upotreba globalne promenljive array na liniji 35: Var array: Arr of int, 0, 0 
INFO  02:09:17,859 - Detektovana upotreba lokalne promenljive mid metode search na liniji 35: Var mid: Int , 4, 1 
INFO  02:09:17,859 - Detektovan pristup elementu niza array na liniji 35: array: Int , -1, -1 
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra x metode search na liniji 35: Var x: Int , 3, 1 
INFO  02:09:17,859 - Detektovana upotreba lokalne promenljive mid metode search na liniji 36: Var mid: Int , 4, 1 
INFO  02:09:17,859 - Detektovana upotreba globalne promenljive array na liniji 40: Var array: Arr of int, 0, 0 
INFO  02:09:17,859 - Detektovana upotreba lokalne promenljive mid metode search na liniji 40: Var mid: Int , 4, 1 
INFO  02:09:17,859 - Detektovan pristup elementu niza array na liniji 40: array: Int , -1, -1 
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra x metode search na liniji 40: Var x: Int , 3, 1 
INFO  02:09:17,859 - Detektovan poziv metode search unutrasnje klase  na liniji 41: Meth search: Int , 0, 5 
INFO  02:09:17,859 - Detektovana upotreba globalne promenljive array na liniji 41: Var array: Arr of int, 0, 0 
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra l metode search na liniji 41: Var l: Int , 1, 1 
INFO  02:09:17,859 - Detektovana upotreba lokalne promenljive mid metode search na liniji 41: Var mid: Int , 4, 1 
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra x metode search na liniji 41: Var x: Int , 3, 1 
ERROR 02:09:17,859 - Semanticka greska na liniji 41: nevalidan tip parametra pri pozivu funkcije search!
INFO  02:09:17,859 - Detektovan poziv metode search unutrasnje klase  na liniji 45: Meth search: Int , 0, 5 
INFO  02:09:17,859 - Detektovana upotreba globalne promenljive array na liniji 45: Var array: Arr of int, 0, 0 
INFO  02:09:17,859 - Detektovana upotreba lokalne promenljive mid metode search na liniji 45: Var mid: Int , 4, 1 
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra r metode search na liniji 45: Var r: Int , 2, 1 
INFO  02:09:17,859 - Detektovana upotreba formalnog parametra x metode search na liniji 45: Var x: Int , 3, 1 
ERROR 02:09:17,859 - Semanticka greska na liniji 45: nevalidan tip parametra pri pozivu funkcije search!
