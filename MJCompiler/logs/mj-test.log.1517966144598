INFO  02:13:55,721 - #39 program
INFO  02:13:55,723 - #43 kod_gen
INFO  02:13:55,724 - #43 int
INFO  02:13:55,727 - #43 array
INFO  02:13:55,729 - #14 [
INFO  02:13:55,729 - #15 ]
INFO  02:13:55,729 - #25 ;
INFO  02:13:55,730 - #38 class
INFO  02:13:55,730 - #43 Search
INFO  02:13:55,730 - #26 {
INFO  02:13:55,730 - #26 {
INFO  02:13:55,730 - #43 int
INFO  02:13:55,730 - #43 search
INFO  02:13:55,730 - #16 (
INFO  02:13:55,746 - #43 int
INFO  02:13:55,746 - #43 array
INFO  02:13:55,746 - #14 [
INFO  02:13:55,746 - #15 ]
INFO  02:13:55,746 - #21 ,
INFO  02:13:55,746 - #43 int
INFO  02:13:55,746 - #43 l
INFO  02:13:55,746 - #21 ,
INFO  02:13:55,746 - #43 int
INFO  02:13:55,746 - #43 r
INFO  02:13:55,746 - #21 ,
INFO  02:13:55,746 - #43 int
INFO  02:13:55,746 - #43 x
INFO  02:13:55,746 - #17 )
INFO  02:13:55,746 - #26 {
INFO  02:13:55,746 - #28 if
INFO  02:13:55,761 - #16 (
INFO  02:13:55,761 - #43 l
INFO  02:13:55,761 - #9 >
INFO  02:13:55,761 - #43 r
INFO  02:13:55,770 - #17 )
INFO  02:13:55,776 - #34 return
INFO  02:13:55,779 - #6 -
INFO  02:13:55,780 - #42 1
INFO  02:13:55,780 - #25 ;
INFO  02:13:55,781 - #29 do
INFO  02:13:55,784 - #26 {
INFO  02:13:55,787 - #28 if
INFO  02:13:55,788 - #16 (
INFO  02:13:55,792 - #43 array
INFO  02:13:55,795 - #14 [
INFO  02:13:55,799 - #43 l
INFO  02:13:55,799 - #15 ]
INFO  02:13:55,801 - #7 ==
INFO  02:13:55,802 - #43 x
INFO  02:13:55,804 - #17 )
INFO  02:13:55,805 - #26 {
INFO  02:13:55,806 - #34 return
INFO  02:13:55,806 - #6 -
INFO  02:13:55,811 - #43 l
INFO  02:13:55,811 - #25 ;
INFO  02:13:55,812 - #27 }
INFO  02:13:55,812 - #32 else
INFO  02:13:55,813 - #43 l
INFO  02:13:55,815 - #23 ++
INFO  02:13:55,817 - #25 ;
INFO  02:13:55,820 - #27 }
INFO  02:13:55,823 - #30 while
INFO  02:13:55,823 - #16 (
INFO  02:13:55,825 - #43 l
INFO  02:13:55,825 - #12 <=
INFO  02:13:55,826 - #43 r
INFO  02:13:55,827 - #17 )
INFO  02:13:55,827 - #25 ;
INFO  02:13:55,828 - #34 return
INFO  02:13:55,829 - #6 -
INFO  02:13:55,829 - #42 1
INFO  02:13:55,829 - #25 ;
INFO  02:13:55,830 - #27 }
INFO  02:13:55,830 - #27 }
INFO  02:13:55,833 - #27 }
INFO  02:13:55,834 - #38 class
INFO  02:13:55,836 - #43 RecursiveBinarySearch
INFO  02:13:55,837 - #41 extends
INFO  02:13:55,837 - #43 Search
INFO  02:13:55,837 - #26 {
INFO  02:13:55,837 - #26 {
INFO  02:13:55,838 - #43 int
INFO  02:13:55,838 - #43 search
INFO  02:13:55,838 - #16 (
INFO  02:13:55,839 - #43 int
INFO  02:13:55,839 - #43 array
INFO  02:13:55,839 - #14 [
INFO  02:13:55,840 - #15 ]
INFO  02:13:55,840 - #21 ,
INFO  02:13:55,840 - #43 int
INFO  02:13:55,840 - #43 l
INFO  02:13:55,841 - #21 ,
INFO  02:13:55,841 - #43 int
INFO  02:13:55,841 - #43 r
INFO  02:13:55,842 - #21 ,
INFO  02:13:55,842 - #43 int
INFO  02:13:55,842 - #43 x
INFO  02:13:55,842 - #17 )
INFO  02:13:55,843 - #43 int
INFO  02:13:55,843 - #43 mid
INFO  02:13:55,843 - #25 ;
INFO  02:13:55,843 - #26 {
INFO  02:13:55,845 - #28 if
INFO  02:13:55,847 - #16 (
INFO  02:13:55,847 - #43 r
INFO  02:13:55,848 - #10 >=
INFO  02:13:55,848 - #43 l
INFO  02:13:55,853 - #17 )
INFO  02:13:55,854 - #26 {
INFO  02:13:55,854 - #43 mid
INFO  02:13:55,854 - #22 =
INFO  02:13:55,856 - #43 l
INFO  02:13:55,856 - #5 +
INFO  02:13:55,856 - #16 (
INFO  02:13:55,858 - #43 r
INFO  02:13:55,859 - #6 -
INFO  02:13:55,859 - #43 l
INFO  02:13:55,860 - #17 )
INFO  02:13:55,861 - #3 /
INFO  02:13:55,861 - #42 2
INFO  02:13:55,864 - #25 ;
INFO  02:13:55,865 - #28 if
INFO  02:13:55,865 - #16 (
INFO  02:13:55,866 - #43 array
INFO  02:13:55,866 - #14 [
INFO  02:13:55,866 - #43 mid
INFO  02:13:55,866 - #15 ]
INFO  02:13:55,867 - #7 ==
INFO  02:13:55,867 - #43 x
INFO  02:13:55,867 - #17 )
INFO  02:13:55,868 - #34 return
INFO  02:13:55,868 - #43 mid
INFO  02:13:55,868 - #25 ;
INFO  02:13:55,869 - #28 if
INFO  02:13:55,870 - #16 (
INFO  02:13:55,870 - #43 array
INFO  02:13:55,870 - #14 [
INFO  02:13:55,870 - #43 mid
INFO  02:13:55,870 - #15 ]
INFO  02:13:55,871 - #9 >
INFO  02:13:55,871 - #43 x
INFO  02:13:55,871 - #17 )
INFO  02:13:55,872 - #34 return
INFO  02:13:55,872 - #43 search
INFO  02:13:55,872 - #16 (
INFO  02:13:55,876 - #43 array
INFO  02:13:55,877 - #21 ,
INFO  02:13:55,877 - #43 l
INFO  02:13:55,877 - #21 ,
INFO  02:13:55,878 - #43 mid
INFO  02:13:55,878 - #6 -
INFO  02:13:55,878 - #42 1
INFO  02:13:55,878 - #21 ,
INFO  02:13:55,879 - #43 x
INFO  02:13:55,879 - #17 )
INFO  02:13:55,883 - #25 ;
INFO  02:13:55,884 - #34 return
INFO  02:13:55,884 - #43 search
INFO  02:13:55,884 - #16 (
INFO  02:13:55,884 - #43 array
INFO  02:13:55,885 - #21 ,
INFO  02:13:55,885 - #43 mid
INFO  02:13:55,885 - #5 +
INFO  02:13:55,886 - #42 1
INFO  02:13:55,886 - #21 ,
INFO  02:13:55,886 - #43 r
INFO  02:13:55,886 - #21 ,
INFO  02:13:55,886 - #43 x
INFO  02:13:55,887 - #17 )
INFO  02:13:55,887 - #25 ;
INFO  02:13:55,887 - #27 }
INFO  02:13:55,888 - #34 return
INFO  02:13:55,888 - #6 -
INFO  02:13:55,888 - #42 1
INFO  02:13:55,888 - #25 ;
INFO  02:13:55,889 - #27 }
INFO  02:13:55,889 - #27 }
INFO  02:13:55,889 - #27 }
INFO  02:13:55,890 - #38 class
INFO  02:13:55,890 - #43 BinarySearch
INFO  02:13:55,890 - #41 extends
INFO  02:13:55,891 - #43 Search
INFO  02:13:55,891 - #26 {
INFO  02:13:55,891 - #26 {
INFO  02:13:55,891 - #43 int
INFO  02:13:55,892 - #43 search
INFO  02:13:55,892 - #16 (
INFO  02:13:55,892 - #43 int
INFO  02:13:55,892 - #43 array
INFO  02:13:55,893 - #14 [
INFO  02:13:55,893 - #15 ]
INFO  02:13:55,893 - #21 ,
INFO  02:13:55,893 - #43 int
INFO  02:13:55,894 - #43 l
INFO  02:13:55,894 - #21 ,
INFO  02:13:55,894 - #43 int
INFO  02:13:55,894 - #43 r
INFO  02:13:55,894 - #21 ,
INFO  02:13:55,894 - #43 int
INFO  02:13:55,895 - #43 x
INFO  02:13:55,895 - #17 )
INFO  02:13:55,895 - #43 int
INFO  02:13:55,895 - #43 m
INFO  02:13:55,895 - #25 ;
INFO  02:13:55,895 - #26 {
INFO  02:13:55,896 - #43 l
INFO  02:13:55,896 - #22 =
INFO  02:13:55,896 - #42 0
INFO  02:13:55,896 - #25 ;
INFO  02:13:55,896 - #43 r
INFO  02:13:55,896 - #22 =
INFO  02:13:55,897 - #43 len
INFO  02:13:55,897 - #16 (
INFO  02:13:55,897 - #43 array
INFO  02:13:55,897 - #17 )
INFO  02:13:55,898 - #6 -
INFO  02:13:55,898 - #42 1
INFO  02:13:55,898 - #25 ;
INFO  02:13:55,898 - #29 do
INFO  02:13:55,899 - #26 {
INFO  02:13:55,899 - #43 m
INFO  02:13:55,899 - #22 =
INFO  02:13:55,900 - #43 l
INFO  02:13:55,900 - #5 +
INFO  02:13:55,900 - #16 (
INFO  02:13:55,900 - #43 r
INFO  02:13:55,900 - #6 -
INFO  02:13:55,902 - #43 l
INFO  02:13:55,903 - #17 )
INFO  02:13:55,903 - #3 /
INFO  02:13:55,903 - #42 2
INFO  02:13:55,903 - #25 ;
INFO  02:13:55,904 - #28 if
INFO  02:13:55,904 - #16 (
INFO  02:13:55,904 - #43 array
INFO  02:13:55,905 - #14 [
INFO  02:13:55,905 - #43 m
INFO  02:13:55,905 - #15 ]
INFO  02:13:55,905 - #7 ==
INFO  02:13:55,906 - #43 x
INFO  02:13:55,906 - #17 )
INFO  02:13:55,909 - #34 return
INFO  02:13:55,909 - #43 m
INFO  02:13:55,910 - #25 ;
INFO  02:13:55,911 - #28 if
INFO  02:13:55,911 - #16 (
INFO  02:13:55,911 - #43 array
INFO  02:13:55,912 - #14 [
INFO  02:13:55,912 - #43 m
INFO  02:13:55,912 - #15 ]
INFO  02:13:55,923 - #11 <
INFO  02:13:55,924 - #43 x
INFO  02:13:55,925 - #17 )
INFO  02:13:55,925 - #43 l
INFO  02:13:55,925 - #22 =
INFO  02:13:55,926 - #43 m
INFO  02:13:55,926 - #5 +
INFO  02:13:55,927 - #42 1
INFO  02:13:55,927 - #25 ;
INFO  02:13:55,927 - #32 else
INFO  02:13:55,927 - #43 r
INFO  02:13:55,928 - #22 =
INFO  02:13:55,928 - #43 m
INFO  02:13:55,928 - #6 -
INFO  02:13:55,928 - #42 1
INFO  02:13:55,928 - #25 ;
INFO  02:13:55,929 - #27 }
INFO  02:13:55,929 - #30 while
INFO  02:13:55,929 - #16 (
INFO  02:13:55,929 - #43 l
INFO  02:13:55,929 - #12 <=
INFO  02:13:55,929 - #43 r
INFO  02:13:55,930 - #17 )
INFO  02:13:55,930 - #25 ;
INFO  02:13:55,930 - #34 return
INFO  02:13:55,930 - #6 -
INFO  02:13:55,930 - #42 1
INFO  02:13:55,931 - #25 ;
INFO  02:13:55,931 - #27 }
INFO  02:13:55,931 - #27 }
INFO  02:13:55,931 - #27 }
INFO  02:13:55,931 - #38 class
INFO  02:13:55,932 - #43 Helper
INFO  02:13:55,932 - #26 {
INFO  02:13:55,932 - #26 {
INFO  02:13:55,932 - #37 void
INFO  02:13:55,932 - #43 generateArray
INFO  02:13:55,935 - #16 (
INFO  02:13:55,936 - #43 int
INFO  02:13:55,936 - #43 size
INFO  02:13:55,936 - #17 )
INFO  02:13:55,936 - #43 int
INFO  02:13:55,936 - #43 i
INFO  02:13:55,937 - #25 ;
INFO  02:13:55,937 - #26 {
INFO  02:13:55,937 - #43 i
INFO  02:13:55,937 - #22 =
INFO  02:13:55,937 - #42 0
INFO  02:13:55,938 - #25 ;
INFO  02:13:55,938 - #29 do
INFO  02:13:55,938 - #26 {
INFO  02:13:55,938 - #36 read
INFO  02:13:55,938 - #16 (
INFO  02:13:55,939 - #43 array
INFO  02:13:55,939 - #14 [
INFO  02:13:55,939 - #43 i
INFO  02:13:55,939 - #15 ]
INFO  02:13:55,939 - #17 )
INFO  02:13:55,940 - #25 ;
INFO  02:13:55,940 - #43 i
INFO  02:13:55,940 - #23 ++
INFO  02:13:55,941 - #25 ;
INFO  02:13:55,941 - #27 }
INFO  02:13:55,941 - #30 while
INFO  02:13:55,941 - #16 (
INFO  02:13:55,941 - #43 i
INFO  02:13:55,942 - #11 <
INFO  02:13:55,942 - #43 size
INFO  02:13:55,942 - #17 )
INFO  02:13:55,942 - #25 ;
INFO  02:13:55,943 - #27 }
INFO  02:13:55,943 - #37 void
INFO  02:13:55,943 - #43 sortArray
INFO  02:13:55,943 - #16 (
INFO  02:13:55,943 - #17 )
INFO  02:13:55,945 - #43 int
INFO  02:13:55,945 - #43 n
INFO  02:13:55,945 - #25 ;
INFO  02:13:55,946 - #43 int
INFO  02:13:55,946 - #43 i
INFO  02:13:55,946 - #25 ;
INFO  02:13:55,946 - #43 int
INFO  02:13:55,946 - #43 key
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #43 int
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #26 {
INFO  02:13:55,947 - #43 n
INFO  02:13:55,947 - #22 =
INFO  02:13:55,947 - #43 len
INFO  02:13:55,947 - #16 (
INFO  02:13:55,947 - #43 array
INFO  02:13:55,947 - #17 )
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #43 i
INFO  02:13:55,947 - #22 =
INFO  02:13:55,947 - #42 1
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #29 do
INFO  02:13:55,947 - #26 {
INFO  02:13:55,947 - #43 key
INFO  02:13:55,947 - #22 =
INFO  02:13:55,947 - #43 array
INFO  02:13:55,947 - #14 [
INFO  02:13:55,947 - #43 i
INFO  02:13:55,947 - #15 ]
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #22 =
INFO  02:13:55,947 - #43 i
INFO  02:13:55,947 - #6 -
INFO  02:13:55,947 - #42 1
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #28 if
INFO  02:13:55,947 - #16 (
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #10 >=
INFO  02:13:55,947 - #42 0
INFO  02:13:55,947 - #19 &&
INFO  02:13:55,947 - #43 array
INFO  02:13:55,947 - #14 [
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #15 ]
INFO  02:13:55,947 - #9 >
INFO  02:13:55,947 - #43 key
INFO  02:13:55,947 - #17 )
INFO  02:13:55,947 - #29 do
INFO  02:13:55,947 - #26 {
INFO  02:13:55,947 - #43 array
INFO  02:13:55,947 - #14 [
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #5 +
INFO  02:13:55,947 - #42 1
INFO  02:13:55,947 - #15 ]
INFO  02:13:55,947 - #22 =
INFO  02:13:55,947 - #43 array
INFO  02:13:55,947 - #14 [
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #15 ]
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #22 =
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #6 -
INFO  02:13:55,947 - #42 1
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #27 }
INFO  02:13:55,947 - #30 while
INFO  02:13:55,947 - #16 (
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #10 >=
INFO  02:13:55,947 - #42 0
INFO  02:13:55,947 - #19 &&
INFO  02:13:55,947 - #43 array
INFO  02:13:55,947 - #14 [
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #15 ]
INFO  02:13:55,947 - #9 >
INFO  02:13:55,947 - #43 key
INFO  02:13:55,947 - #17 )
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #43 i
INFO  02:13:55,947 - #23 ++
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #43 array
INFO  02:13:55,947 - #14 [
INFO  02:13:55,947 - #43 j
INFO  02:13:55,947 - #5 +
INFO  02:13:55,947 - #42 1
INFO  02:13:55,947 - #15 ]
INFO  02:13:55,947 - #22 =
INFO  02:13:55,947 - #43 key
INFO  02:13:55,947 - #25 ;
INFO  02:13:55,947 - #27 }
INFO  02:13:55,947 - #30 while
INFO  02:13:55,947 - #16 (
INFO  02:13:55,963 - #43 i
INFO  02:13:55,963 - #11 <
INFO  02:13:55,963 - #43 n
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #27 }
INFO  02:13:55,963 - #27 }
INFO  02:13:55,963 - #27 }
INFO  02:13:55,963 - #26 {
INFO  02:13:55,963 - #37 void
INFO  02:13:55,963 - #43 printSearchResult
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #43 int
INFO  02:13:55,963 - #43 res
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #26 {
INFO  02:13:55,963 - #28 if
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #43 res
INFO  02:13:55,963 - #8 !=
INFO  02:13:55,963 - #6 -
INFO  02:13:55,963 - #42 1
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #35 print
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #43 res
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #32 else
INFO  02:13:55,963 - #26 {
INFO  02:13:55,963 - #35 print
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #45 n
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #35 print
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #45 o
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #35 print
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #45 t
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #35 print
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #45 f
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #35 print
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #45 o
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #35 print
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #45 u
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #35 print
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #45 n
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #35 print
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #45 d
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #27 }
INFO  02:13:55,963 - #27 }
INFO  02:13:55,963 - #37 void
INFO  02:13:55,963 - #43 main
INFO  02:13:55,963 - #16 (
INFO  02:13:55,963 - #17 )
INFO  02:13:55,963 - #43 Helper
INFO  02:13:55,963 - #43 h
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,963 - #43 int
INFO  02:13:55,963 - #43 size
INFO  02:13:55,963 - #25 ;
INFO  02:13:55,979 - #43 bool
INFO  02:13:55,979 - #43 loop
INFO  02:13:55,979 - #25 ;
INFO  02:13:55,979 - #43 Search
INFO  02:13:55,979 - #43 s
INFO  02:13:55,979 - #25 ;
INFO  02:13:55,979 - #43 int
INFO  02:13:55,979 - #43 res
INFO  02:13:55,979 - #25 ;
INFO  02:13:55,979 - #43 int
INFO  02:13:55,979 - #43 elem
INFO  02:13:55,979 - #25 ;
INFO  02:13:55,979 - #26 {
INFO  02:13:55,979 - #43 loop
INFO  02:13:55,979 - #22 =
INFO  02:13:55,979 - #44 true
INFO  02:13:55,979 - #25 ;
INFO  02:13:55,979 - #29 do
INFO  02:13:55,979 - #26 {
INFO  02:13:55,979 - #36 read
INFO  02:13:55,979 - #16 (
INFO  02:13:55,979 - #43 size
INFO  02:13:55,979 - #17 )
INFO  02:13:55,979 - #25 ;
INFO  02:13:55,979 - #28 if
INFO  02:13:55,979 - #16 (
INFO  02:13:55,979 - #43 size
INFO  02:13:55,979 - #12 <=
INFO  02:13:55,979 - #42 0
INFO  02:13:55,979 - #17 )
INFO  02:13:55,979 - #26 {
INFO  02:13:55,979 - #35 print
INFO  02:13:55,979 - #16 (
INFO  02:13:55,979 - #45 s
INFO  02:13:55,979 - #17 )
INFO  02:13:55,979 - #25 ;
INFO  02:13:55,979 - #35 print
INFO  02:13:55,979 - #16 (
INFO  02:13:55,979 - #45 i
INFO  02:13:55,994 - #17 )
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #35 print
INFO  02:13:55,994 - #16 (
INFO  02:13:55,994 - #45 z
INFO  02:13:55,994 - #17 )
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #35 print
INFO  02:13:55,994 - #16 (
INFO  02:13:55,994 - #45 e
INFO  02:13:55,994 - #17 )
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #35 print
INFO  02:13:55,994 - #16 (
INFO  02:13:55,994 - #45 e
INFO  02:13:55,994 - #17 )
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #35 print
INFO  02:13:55,994 - #16 (
INFO  02:13:55,994 - #45 r
INFO  02:13:55,994 - #17 )
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #35 print
INFO  02:13:55,994 - #16 (
INFO  02:13:55,994 - #45 r
INFO  02:13:55,994 - #17 )
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #35 print
INFO  02:13:55,994 - #16 (
INFO  02:13:55,994 - #45 o
INFO  02:13:55,994 - #17 )
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #35 print
INFO  02:13:55,994 - #16 (
INFO  02:13:55,994 - #45 r
INFO  02:13:55,994 - #17 )
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #33 continue
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #27 }
INFO  02:13:55,994 - #43 array
INFO  02:13:55,994 - #22 =
INFO  02:13:55,994 - #18 new
INFO  02:13:55,994 - #43 int
INFO  02:13:55,994 - #14 [
INFO  02:13:55,994 - #43 size
INFO  02:13:55,994 - #15 ]
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #43 h
INFO  02:13:55,994 - #22 =
INFO  02:13:55,994 - #18 new
INFO  02:13:55,994 - #43 Helper
INFO  02:13:55,994 - #25 ;
INFO  02:13:55,994 - #43 h
INFO  02:13:55,994 - #13 .
INFO  02:13:55,994 - #43 generateArray
INFO  02:13:55,994 - #16 (
INFO  02:13:55,994 - #43 size
INFO  02:13:55,994 - #17 )
INFO  02:13:55,994 - #25 ;
INFO  02:13:56,005 - #43 h
INFO  02:13:56,006 - #13 .
INFO  02:13:56,006 - #43 sortArray
INFO  02:13:56,006 - #16 (
INFO  02:13:56,006 - #17 )
INFO  02:13:56,007 - #25 ;
INFO  02:13:56,007 - #43 loop
INFO  02:13:56,007 - #22 =
INFO  02:13:56,008 - #44 false
INFO  02:13:56,008 - #25 ;
INFO  02:13:56,008 - #27 }
INFO  02:13:56,008 - #30 while
INFO  02:13:56,008 - #16 (
INFO  02:13:56,008 - #43 loop
INFO  02:13:56,008 - #17 )
INFO  02:13:56,008 - #25 ;
INFO  02:13:56,009 - #43 s
INFO  02:13:56,009 - #22 =
INFO  02:13:56,009 - #18 new
INFO  02:13:56,009 - #43 Search
INFO  02:13:56,009 - #25 ;
INFO  02:13:56,009 - #36 read
INFO  02:13:56,009 - #16 (
INFO  02:13:56,009 - #43 elem
INFO  02:13:56,009 - #17 )
INFO  02:13:56,009 - #25 ;
INFO  02:13:56,010 - #43 res
INFO  02:13:56,010 - #22 =
INFO  02:13:56,010 - #43 s
INFO  02:13:56,010 - #13 .
INFO  02:13:56,010 - #43 search
INFO  02:13:56,010 - #16 (
INFO  02:13:56,010 - #43 array
INFO  02:13:56,010 - #21 ,
INFO  02:13:56,010 - #42 0
INFO  02:13:56,010 - #21 ,
INFO  02:13:56,011 - #43 size
INFO  02:13:56,011 - #6 -
INFO  02:13:56,011 - #42 1
INFO  02:13:56,011 - #21 ,
INFO  02:13:56,011 - #43 elem
INFO  02:13:56,011 - #17 )
INFO  02:13:56,011 - #25 ;
INFO  02:13:56,012 - #43 printSearchResult
INFO  02:13:56,012 - #16 (
INFO  02:13:56,012 - #43 res
INFO  02:13:56,012 - #17 )
INFO  02:13:56,012 - #25 ;
INFO  02:13:56,012 - #43 s
INFO  02:13:56,012 - #22 =
INFO  02:13:56,012 - #18 new
INFO  02:13:56,013 - #43 BinarySearch
INFO  02:13:56,013 - #25 ;
INFO  02:13:56,013 - #43 res
INFO  02:13:56,013 - #22 =
INFO  02:13:56,013 - #43 s
INFO  02:13:56,013 - #13 .
INFO  02:13:56,014 - #43 search
INFO  02:13:56,014 - #16 (
INFO  02:13:56,014 - #43 array
INFO  02:13:56,014 - #21 ,
INFO  02:13:56,014 - #42 0
INFO  02:13:56,014 - #21 ,
INFO  02:13:56,014 - #43 size
INFO  02:13:56,015 - #6 -
INFO  02:13:56,015 - #42 1
INFO  02:13:56,015 - #21 ,
INFO  02:13:56,015 - #43 elem
INFO  02:13:56,015 - #17 )
INFO  02:13:56,015 - #25 ;
INFO  02:13:56,015 - #43 printSearchResult
INFO  02:13:56,016 - #16 (
INFO  02:13:56,016 - #43 res
INFO  02:13:56,016 - #17 )
INFO  02:13:56,016 - #25 ;
INFO  02:13:56,016 - #43 s
INFO  02:13:56,017 - #22 =
INFO  02:13:56,017 - #18 new
INFO  02:13:56,017 - #43 RecursiveBinarySearch
INFO  02:13:56,017 - #25 ;
INFO  02:13:56,017 - #43 res
INFO  02:13:56,017 - #22 =
INFO  02:13:56,017 - #43 s
INFO  02:13:56,017 - #13 .
INFO  02:13:56,018 - #43 search
INFO  02:13:56,018 - #16 (
INFO  02:13:56,018 - #43 array
INFO  02:13:56,018 - #21 ,
INFO  02:13:56,018 - #42 0
INFO  02:13:56,018 - #21 ,
INFO  02:13:56,018 - #43 size
INFO  02:13:56,018 - #6 -
INFO  02:13:56,019 - #42 1
INFO  02:13:56,019 - #21 ,
INFO  02:13:56,019 - #43 elem
INFO  02:13:56,019 - #17 )
INFO  02:13:56,019 - #25 ;
INFO  02:13:56,019 - #43 printSearchResult
INFO  02:13:56,020 - #16 (
INFO  02:13:56,020 - #43 res
INFO  02:13:56,020 - #17 )
INFO  02:13:56,020 - #25 ;
INFO  02:13:56,020 - #27 }
INFO  02:13:56,020 - #27 }
INFO  02:13:56,083 - Detektovana upotreba formalnog parametra l metode search na liniji 5: Var l: Int , 2, 1 
INFO  02:13:56,083 - Detektovana upotreba formalnog parametra r metode search na liniji 5: Var r: Int , 3, 1 
INFO  02:13:56,083 - Detektovana upotreba formalnog parametra array metode search na liniji 8: Var array: Arr of int, 1, 1 
INFO  02:13:56,083 - Detektovana upotreba formalnog parametra l metode search na liniji 8: Var l: Int , 2, 1 
INFO  02:13:56,083 - Detektovan pristup elementu niza array na liniji 8: array: Int , -1, -1 
INFO  02:13:56,083 - Detektovana upotreba formalnog parametra x metode search na liniji 8: Var x: Int , 4, 1 
INFO  02:13:56,083 - Detektovana upotreba formalnog parametra l metode search na liniji 10: Var l: Int , 2, 1 
INFO  02:13:56,083 - Detektovana upotreba formalnog parametra l metode search na liniji 13: Var l: Int , 2, 1 
INFO  02:13:56,083 - Detektovana upotreba formalnog parametra l metode search na liniji 14: Var l: Int , 2, 1 
INFO  02:13:56,083 - Detektovana upotreba formalnog parametra r metode search na liniji 14: Var r: Int , 3, 1 
ERROR 02:13:56,083 - Semanticka greska na liniji 27: prilikom redefinisanja metode potpis mora ostati isti - tipovi argumenata se ne smeju menjati!
ERROR 02:13:56,083 - Semanticka greska na liniji 27: broj argumenata redefinisane metode ne sme biti manji od one koju redefinise!
INFO  02:13:56,092 - Detektovana upotreba formalnog parametra r metode search na liniji 29: Var r: Int , 2, 1 
INFO  02:13:56,092 - Detektovana upotreba formalnog parametra l metode search na liniji 29: Var l: Int , 1, 1 
INFO  02:13:56,092 - Detektovana upotreba lokalne promenljive mid metode search na liniji 31: Var mid: Int , 4, 1 
INFO  02:13:56,093 - Detektovana upotreba formalnog parametra l metode search na liniji 31: Var l: Int , 1, 1 
INFO  02:13:56,093 - Detektovana upotreba formalnog parametra r metode search na liniji 31: Var r: Int , 2, 1 
INFO  02:13:56,093 - Detektovana upotreba formalnog parametra l metode search na liniji 31: Var l: Int , 1, 1 
INFO  02:13:56,093 - Detektovana upotreba globalne promenljive array na liniji 35: Var array: Arr of int, 0, 0 
INFO  02:13:56,093 - Detektovana upotreba lokalne promenljive mid metode search na liniji 35: Var mid: Int , 4, 1 
INFO  02:13:56,094 - Detektovan pristup elementu niza array na liniji 35: array: Int , -1, -1 
INFO  02:13:56,094 - Detektovana upotreba formalnog parametra x metode search na liniji 35: Var x: Int , 3, 1 
INFO  02:13:56,094 - Detektovana upotreba lokalne promenljive mid metode search na liniji 36: Var mid: Int , 4, 1 
INFO  02:13:56,094 - Detektovana upotreba globalne promenljive array na liniji 40: Var array: Arr of int, 0, 0 
INFO  02:13:56,094 - Detektovana upotreba lokalne promenljive mid metode search na liniji 40: Var mid: Int , 4, 1 
INFO  02:13:56,094 - Detektovan pristup elementu niza array na liniji 40: array: Int , -1, -1 
INFO  02:13:56,094 - Detektovana upotreba formalnog parametra x metode search na liniji 40: Var x: Int , 3, 1 
INFO  02:13:56,094 - Detektovan poziv metode search unutrasnje klase  na liniji 41: Meth search: Int , 0, 5 
INFO  02:13:56,094 - Detektovana upotreba globalne promenljive array na liniji 41: Var array: Arr of int, 0, 0 
INFO  02:13:56,094 - Detektovana upotreba formalnog parametra l metode search na liniji 41: Var l: Int , 1, 1 
INFO  02:13:56,094 - Detektovana upotreba lokalne promenljive mid metode search na liniji 41: Var mid: Int , 4, 1 
INFO  02:13:56,094 - Detektovana upotreba formalnog parametra x metode search na liniji 41: Var x: Int , 3, 1 
ERROR 02:13:56,094 - Semanticka greska na liniji 41: nevalidan tip parametra pri pozivu funkcije search!
INFO  02:13:56,094 - Detektovan poziv metode search unutrasnje klase  na liniji 45: Meth search: Int , 0, 5 
INFO  02:13:56,094 - Detektovana upotreba globalne promenljive array na liniji 45: Var array: Arr of int, 0, 0 
INFO  02:13:56,094 - Detektovana upotreba lokalne promenljive mid metode search na liniji 45: Var mid: Int , 4, 1 
INFO  02:13:56,094 - Detektovana upotreba formalnog parametra r metode search na liniji 45: Var r: Int , 2, 1 
INFO  02:13:56,094 - Detektovana upotreba formalnog parametra x metode search na liniji 45: Var x: Int , 3, 1 
ERROR 02:13:56,094 - Semanticka greska na liniji 45: nevalidan tip parametra pri pozivu funkcije search!
